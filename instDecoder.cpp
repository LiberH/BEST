/**
 * generated by HARMLESS : 'Hardware ARchitecture Modeling Language
 *                          for Embedded Software Simulation'
 * model : e200z4
 *
 */

#include "instruction.h" //first for precompiled headers
#include <iostream>
#include "instDecoder.h"
#ifndef DO_NOT_USE_INTERNAL_INSTRUCTION_CACHE
#include "instDecoderCache.h"
#endif
#include "arch.h"
using namespace std;
/** set internal instruction cache size.
 *  The instruction cache is used by the simulator to
 *  store instruction objects. This prevent us many new/delete
 *  and a call to the constructor.
 *  This is a direct cache (1-way) 
 *  the default size is set to 15 bits -> 32768 instruction objects max
 */
#define INTERNAL_INSTRUCTION_CACHE_SIZE_IN_BITS 15

e200z4_instruction* e200z4_decode_12(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE00000) == 0xC800000)) return new e200z4_eq_imm_ra_simm_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00000) == 0xCA00000)) return new e200z4_imm_lge_ra_simm_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00000) == 0xC200000)) return new e200z4_imm_lgt_ra_simm_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00000) == 0xCC00000)) return new e200z4_imm_lle_ra_simm_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00000) == 0xC400000)) return new e200z4_imm_llt_ra_simm_to_f_tw(pcBase,chunk1);
	if((((chunk_32_0 & 0xFFE00000) == 0xC000000) || ((chunk_32_0 & 0xFFE00000) == 0xC600000) || ((chunk_32_0 & 0xFFE00000) == 0xCE00000) || ((chunk_32_0 & 0xFF600000) == 0xD200000) || ((chunk_32_0 & 0xFF400000) == 0xD400000) || ((chunk_32_0 & 0xFF600000) == 0xE200000) || ((chunk_32_0 & 0xFF400000) == 0xE400000) || ((chunk_32_0 & 0xFFE00000) == 0xF200000) || ((chunk_32_0 & 0xFFC00000) == 0xF400000) || ((chunk_32_0 & 0xFF800000) == 0xF800000))) return new e200z4_imm_notSimple_ra_simm_to_f_tw(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_13(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE00000) == 0xD800000)) return new e200z4_ge_imm_ra_simm_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00000) == 0xD000000)) return new e200z4_gt_imm_ra_simm_to_f_tw(pcBase,chunk1);
	if((((chunk_32_0 & 0xFFE00000) == 0xC000000) || ((chunk_32_0 & 0xFFE00000) == 0xC600000) || ((chunk_32_0 & 0xFFE00000) == 0xCE00000) || ((chunk_32_0 & 0xFF600000) == 0xD200000) || ((chunk_32_0 & 0xFF400000) == 0xD400000) || ((chunk_32_0 & 0xFF600000) == 0xE200000) || ((chunk_32_0 & 0xFF400000) == 0xE400000) || ((chunk_32_0 & 0xFFE00000) == 0xF200000) || ((chunk_32_0 & 0xFFC00000) == 0xF400000) || ((chunk_32_0 & 0xFF800000) == 0xF800000))) return new e200z4_imm_notSimple_ra_simm_to_f_tw(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_14(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE00000) == 0xE800000)) return new e200z4_imm_le_ra_simm_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00000) == 0xE000000)) return new e200z4_imm_lt_ra_simm_to_f_tw(pcBase,chunk1);
	if((((chunk_32_0 & 0xFFE00000) == 0xC000000) || ((chunk_32_0 & 0xFFE00000) == 0xC600000) || ((chunk_32_0 & 0xFFE00000) == 0xCE00000) || ((chunk_32_0 & 0xFF600000) == 0xD200000) || ((chunk_32_0 & 0xFF400000) == 0xD400000) || ((chunk_32_0 & 0xFF600000) == 0xE200000) || ((chunk_32_0 & 0xFF400000) == 0xE400000) || ((chunk_32_0 & 0xFFE00000) == 0xF200000) || ((chunk_32_0 & 0xFFC00000) == 0xF400000) || ((chunk_32_0 & 0xFF800000) == 0xF800000))) return new e200z4_imm_notSimple_ra_simm_to_f_tw(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_15(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE00000) == 0xF000000)) return new e200z4_imm_ne_ra_simm_to_f_tw(pcBase,chunk1);
	if((((chunk_32_0 & 0xFFE00000) == 0xC000000) || ((chunk_32_0 & 0xFFE00000) == 0xC600000) || ((chunk_32_0 & 0xFFE00000) == 0xCE00000) || ((chunk_32_0 & 0xFF600000) == 0xD200000) || ((chunk_32_0 & 0xFF400000) == 0xD400000) || ((chunk_32_0 & 0xFF600000) == 0xE200000) || ((chunk_32_0 & 0xFF400000) == 0xE400000) || ((chunk_32_0 & 0xFFE00000) == 0xF200000) || ((chunk_32_0 & 0xFFC00000) == 0xF400000) || ((chunk_32_0 & 0xFF800000) == 0xF800000))) return new e200z4_imm_notSimple_ra_simm_to_f_tw(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_28(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x1C000000)) return new e200z4_mulli_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_29(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x1C000000)) return new e200z4_mulli_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_30(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x1C000000)) return new e200z4_mulli_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_31(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x1C000000)) return new e200z4_mulli_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_32(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x20000000)) return new e200z4_noOv_noStatus_ra_rd_simm_subfic_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_33(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x20000000)) return new e200z4_noOv_noStatus_ra_rd_simm_subfic_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_34(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x20000000)) return new e200z4_noOv_noStatus_ra_rd_simm_subfic_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_35(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x20000000)) return new e200z4_noOv_noStatus_ra_rd_simm_subfic_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_40(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF800000) == 0x28000000)) return new e200z4_CR0_cmp_crfd_immediate_l_logical_ra_uimm(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF800000) == 0x28800000)) return new e200z4_CR1_cmp_crfd_immediate_l_logical_ra_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_41(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF800000) == 0x29000000)) return new e200z4_CR2_cmp_crfd_immediate_l_logical_ra_uimm(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF800000) == 0x29800000)) return new e200z4_CR3_cmp_crfd_immediate_l_logical_ra_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_42(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF800000) == 0x2A000000)) return new e200z4_CR4_cmp_crfd_immediate_l_logical_ra_uimm(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF800000) == 0x2A800000)) return new e200z4_CR5_cmp_crfd_immediate_l_logical_ra_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_43(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF800000) == 0x2B000000)) return new e200z4_CR6_cmp_crfd_immediate_l_logical_ra_uimm(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF800000) == 0x2B800000)) return new e200z4_CR7_cmp_crfd_immediate_l_logical_ra_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_44(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF800000) == 0x2C000000)) return new e200z4_CR0_arith_cmp_crfd_immediate_l_ra_simm(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF800000) == 0x2C800000)) return new e200z4_CR1_arith_cmp_crfd_immediate_l_ra_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_45(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF800000) == 0x2D000000)) return new e200z4_CR2_arith_cmp_crfd_immediate_l_ra_simm(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF800000) == 0x2D800000)) return new e200z4_CR3_arith_cmp_crfd_immediate_l_ra_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_46(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF800000) == 0x2E000000)) return new e200z4_CR4_arith_cmp_crfd_immediate_l_ra_simm(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF800000) == 0x2E800000)) return new e200z4_CR5_arith_cmp_crfd_immediate_l_ra_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_47(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF800000) == 0x2F000000)) return new e200z4_CR6_arith_cmp_crfd_immediate_l_ra_simm(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF800000) == 0x2F800000)) return new e200z4_CR7_arith_cmp_crfd_immediate_l_ra_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_48(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x30000000)) return new e200z4_addic_noOv_noStatus_ra_rd_simm_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_49(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x30000000)) return new e200z4_addic_noOv_noStatus_ra_rd_simm_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_50(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x30000000)) return new e200z4_addic_noOv_noStatus_ra_rd_simm_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_51(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x30000000)) return new e200z4_addic_noOv_noStatus_ra_rd_simm_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_52(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x34000000)) return new e200z4_addic_noOv_ra_rd_simm_useStatus_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_53(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x34000000)) return new e200z4_addic_noOv_ra_rd_simm_useStatus_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_54(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x34000000)) return new e200z4_addic_noOv_ra_rd_simm_useStatus_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_55(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x34000000)) return new e200z4_addic_noOv_ra_rd_simm_useStatus_withCarry(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_56(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x38000000)) return new e200z4_addi_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_57(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x38000000)) return new e200z4_addi_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_58(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x38000000)) return new e200z4_addi_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_59(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x38000000)) return new e200z4_addi_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_60(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x3C000000)) return new e200z4_addis_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_61(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x3C000000)) return new e200z4_addis_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_62(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x3C000000)) return new e200z4_addis_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_63(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x3C000000)) return new e200z4_addis_noOv_noStatus_ra_rd_simm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_64(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE00003) == 0x40200003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_f_nz_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40000003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_f_nz_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40600003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_f_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40400003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_f_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x40A00003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_f_nd_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x40800003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_f_nd_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40200001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_f_nz_rel_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40000001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_f_nz_rel_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40600001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_f_rel_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40400001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_f_rel_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x40A00001)) return new e200z4_SP_Check_bc_bd_bi_bo_f_nd_rel_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x40800001)) return new e200z4_SP_Check_bc_bd_bi_bo_f_nd_rel_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40200002)) return new e200z4_abs_bc_bd_bi_bo_d_f_nz_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40000002)) return new e200z4_abs_bc_bd_bi_bo_d_f_nz_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40600002)) return new e200z4_abs_bc_bd_bi_bo_d_f_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40400002)) return new e200z4_abs_bc_bd_bi_bo_d_f_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x40A00002)) return new e200z4_abs_bc_bd_bi_bo_f_nd_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x40800002)) return new e200z4_abs_bc_bd_bi_bo_f_nd_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40200000)) return new e200z4_bc_bd_bi_bo_d_f_nz_rel_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40000000)) return new e200z4_bc_bd_bi_bo_d_f_nz_rel_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40600000)) return new e200z4_bc_bd_bi_bo_d_f_rel_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x40400000)) return new e200z4_bc_bd_bi_bo_d_f_rel_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x40A00000)) return new e200z4_bc_bd_bi_bo_f_nd_rel_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x40800000)) return new e200z4_bc_bd_bi_bo_f_nd_rel_statPred(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_65(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE00003) == 0x41200003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_nz_revStatPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41000003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_nz_statPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41600003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_revStatPred_t_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41400003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_statPred_t_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x41A00003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_nd_revStatPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x41800003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_nd_statPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41200001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_nz_rel_revStatPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41000001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_nz_rel_statPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41600001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_rel_revStatPred_t_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41400001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_rel_statPred_t_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x41A00001)) return new e200z4_SP_Check_bc_bd_bi_bo_nd_rel_revStatPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x41800001)) return new e200z4_SP_Check_bc_bd_bi_bo_nd_rel_statPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41200002)) return new e200z4_abs_bc_bd_bi_bo_d_nz_revStatPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41000002)) return new e200z4_abs_bc_bd_bi_bo_d_nz_statPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41600002)) return new e200z4_abs_bc_bd_bi_bo_d_revStatPred_t_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41400002)) return new e200z4_abs_bc_bd_bi_bo_d_statPred_t_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x41A00002)) return new e200z4_abs_bc_bd_bi_bo_nd_revStatPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x41800002)) return new e200z4_abs_bc_bd_bi_bo_nd_statPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41200000)) return new e200z4_bc_bd_bi_bo_d_nz_rel_revStatPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41000000)) return new e200z4_bc_bd_bi_bo_d_nz_rel_statPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41600000)) return new e200z4_bc_bd_bi_bo_d_rel_revStatPred_t_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE00003) == 0x41400000)) return new e200z4_bc_bd_bi_bo_d_rel_statPred_t_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x41A00000)) return new e200z4_bc_bd_bi_bo_nd_rel_revStatPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA00003) == 0x41800000)) return new e200z4_bc_bd_bi_bo_nd_rel_statPred_t(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_66(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFEE00003) == 0x42200003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_noCond_nz_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42000003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_noCond_nz_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42600003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_noCond_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42400003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_noCond_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42A00003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_nd_noCond_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42800003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_nd_noCond_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42200001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_noCond_nz_rel_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42000001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_noCond_nz_rel_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42600001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_noCond_rel_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42400001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_noCond_rel_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42A00001)) return new e200z4_SP_Check_bc_bd_bi_bo_nd_noCond_rel_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42800001)) return new e200z4_SP_Check_bc_bd_bi_bo_nd_noCond_rel_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42200002)) return new e200z4_abs_bc_bd_bi_bo_d_noCond_nz_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42000002)) return new e200z4_abs_bc_bd_bi_bo_d_noCond_nz_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42600002)) return new e200z4_abs_bc_bd_bi_bo_d_noCond_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42400002)) return new e200z4_abs_bc_bd_bi_bo_d_noCond_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42A00002)) return new e200z4_abs_bc_bd_bi_bo_nd_noCond_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42800002)) return new e200z4_abs_bc_bd_bi_bo_nd_noCond_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42200000)) return new e200z4_bc_bd_bi_bo_d_noCond_nz_rel_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42000000)) return new e200z4_bc_bd_bi_bo_d_noCond_nz_rel_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42600000)) return new e200z4_bc_bd_bi_bo_d_noCond_rel_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42400000)) return new e200z4_bc_bd_bi_bo_d_noCond_rel_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42A00000)) return new e200z4_bc_bd_bi_bo_nd_noCond_rel_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42800000)) return new e200z4_bc_bd_bi_bo_nd_noCond_rel_statPred(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_67(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFEE00003) == 0x42200003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_noCond_nz_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42000003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_noCond_nz_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42600003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_noCond_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42400003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_d_noCond_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42A00003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_nd_noCond_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42800003)) return new e200z4_SP_Check_abs_bc_bd_bi_bo_nd_noCond_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42200001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_noCond_nz_rel_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42000001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_noCond_nz_rel_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42600001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_noCond_rel_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42400001)) return new e200z4_SP_Check_bc_bd_bi_bo_d_noCond_rel_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42A00001)) return new e200z4_SP_Check_bc_bd_bi_bo_nd_noCond_rel_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42800001)) return new e200z4_SP_Check_bc_bd_bi_bo_nd_noCond_rel_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42200002)) return new e200z4_abs_bc_bd_bi_bo_d_noCond_nz_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42000002)) return new e200z4_abs_bc_bd_bi_bo_d_noCond_nz_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42600002)) return new e200z4_abs_bc_bd_bi_bo_d_noCond_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42400002)) return new e200z4_abs_bc_bd_bi_bo_d_noCond_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42A00002)) return new e200z4_abs_bc_bd_bi_bo_nd_noCond_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42800002)) return new e200z4_abs_bc_bd_bi_bo_nd_noCond_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42200000)) return new e200z4_bc_bd_bi_bo_d_noCond_nz_rel_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42000000)) return new e200z4_bc_bd_bi_bo_d_noCond_nz_rel_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42600000)) return new e200z4_bc_bd_bi_bo_d_noCond_rel_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE00003) == 0x42400000)) return new e200z4_bc_bd_bi_bo_d_noCond_rel_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42A00000)) return new e200z4_bc_bd_bi_bo_nd_noCond_rel_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA00003) == 0x42800000)) return new e200z4_bc_bd_bi_bo_nd_noCond_rel_statPred(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_68(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFFFFFFF) == 0x44000002)) return new e200z4_SP_Check_sc(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_72(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000003) == 0x48000003)) return new e200z4_SP_Check_abs_b_li_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000001)) return new e200z4_SP_Check_b_li_rel_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000002)) return new e200z4_abs_b_li(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000000)) return new e200z4_b_li_rel(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_73(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000003) == 0x48000003)) return new e200z4_SP_Check_abs_b_li_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000001)) return new e200z4_SP_Check_b_li_rel_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000002)) return new e200z4_abs_b_li(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000000)) return new e200z4_b_li_rel(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_74(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000003) == 0x48000003)) return new e200z4_SP_Check_abs_b_li_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000001)) return new e200z4_SP_Check_b_li_rel_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000002)) return new e200z4_abs_b_li(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000000)) return new e200z4_b_li_rel(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_75(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000003) == 0x48000003)) return new e200z4_SP_Check_abs_b_li_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000001)) return new e200z4_SP_Check_b_li_rel_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000002)) return new e200z4_abs_b_li(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000003) == 0x48000000)) return new e200z4_b_li_rel(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_76(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF8007FE) == 0x4C000000)) return new e200z4_CR0_crfd_crfs_mcrf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x4C800000)) return new e200z4_CR1_crfd_crfs_mcrf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C200421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_f_nz_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C000421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_f_nz_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C600421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_f_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C400421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_f_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4CA00421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_f_nd_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4C800421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_f_nd_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C200021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_f_nz_revStatPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C000021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_f_nz_statPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C600021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_f_revStatPred_tolr_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C400021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_f_statPred_tolr_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4CA00021)) return new e200z4_SP_Check_abs_bc_bi_bo_f_nd_revStatPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4C800021)) return new e200z4_SP_Check_abs_bc_bi_bo_f_nd_statPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C200420)) return new e200z4_abs_bc_bi_bo_ctr_d_f_nz_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C000420)) return new e200z4_abs_bc_bi_bo_ctr_d_f_nz_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C600420)) return new e200z4_abs_bc_bi_bo_ctr_d_f_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C400420)) return new e200z4_abs_bc_bi_bo_ctr_d_f_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4CA00420)) return new e200z4_abs_bc_bi_bo_ctr_f_nd_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4C800420)) return new e200z4_abs_bc_bi_bo_ctr_f_nd_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C200020)) return new e200z4_abs_bc_bi_bo_d_f_nz_revStatPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C000020)) return new e200z4_abs_bc_bi_bo_d_f_nz_statPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C600020)) return new e200z4_abs_bc_bi_bo_d_f_revStatPred_tolr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4C400020)) return new e200z4_abs_bc_bi_bo_d_f_statPred_tolr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4CA00020)) return new e200z4_abs_bc_bi_bo_f_nd_revStatPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4C800020)) return new e200z4_abs_bc_bi_bo_f_nd_statPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000202)) return new e200z4_crand_crba_crbb_crbd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000102)) return new e200z4_crandc_crba_crbb_crbd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000242)) return new e200z4_crba_crbb_crbd_creqv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C0001C2)) return new e200z4_crba_crbb_crbd_crnand(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000042)) return new e200z4_crba_crbb_crbd_crnor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000382)) return new e200z4_crba_crbb_crbd_cror(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000342)) return new e200z4_crba_crbb_crbd_crorc(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000182)) return new e200z4_crba_crbb_crbd_crxor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C00012C)) return new e200z4_isync(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000064)) return new e200z4_rfi(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_77(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF8007FE) == 0x4D000000)) return new e200z4_CR2_crfd_crfs_mcrf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x4D800000)) return new e200z4_CR3_crfd_crfs_mcrf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D200421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_nz_revStatPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D000421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_nz_statPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D600421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_revStatPred_t_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D400421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_statPred_t_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4DA00421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_nd_revStatPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4D800421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_nd_statPred_t_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D200021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_nz_revStatPred_t_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D000021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_nz_statPred_t_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D600021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_revStatPred_t_tolr_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D400021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_statPred_t_tolr_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4DA00021)) return new e200z4_SP_Check_abs_bc_bi_bo_nd_revStatPred_t_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4D800021)) return new e200z4_SP_Check_abs_bc_bi_bo_nd_statPred_t_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D200420)) return new e200z4_abs_bc_bi_bo_ctr_d_nz_revStatPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D000420)) return new e200z4_abs_bc_bi_bo_ctr_d_nz_statPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D600420)) return new e200z4_abs_bc_bi_bo_ctr_d_revStatPred_t_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D400420)) return new e200z4_abs_bc_bi_bo_ctr_d_statPred_t_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4DA00420)) return new e200z4_abs_bc_bi_bo_ctr_nd_revStatPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4D800420)) return new e200z4_abs_bc_bi_bo_ctr_nd_statPred_t(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D200020)) return new e200z4_abs_bc_bi_bo_d_nz_revStatPred_t_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D000020)) return new e200z4_abs_bc_bi_bo_d_nz_statPred_t_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D600020)) return new e200z4_abs_bc_bi_bo_d_revStatPred_t_tolr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x4D400020)) return new e200z4_abs_bc_bi_bo_d_statPred_t_tolr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4DA00020)) return new e200z4_abs_bc_bi_bo_nd_revStatPred_t_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFA007FF) == 0x4D800020)) return new e200z4_abs_bc_bi_bo_nd_statPred_t_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000202)) return new e200z4_crand_crba_crbb_crbd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000102)) return new e200z4_crandc_crba_crbb_crbd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000242)) return new e200z4_crba_crbb_crbd_creqv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C0001C2)) return new e200z4_crba_crbb_crbd_crnand(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000042)) return new e200z4_crba_crbb_crbd_crnor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000382)) return new e200z4_crba_crbb_crbd_cror(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000342)) return new e200z4_crba_crbb_crbd_crorc(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000182)) return new e200z4_crba_crbb_crbd_crxor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C00012C)) return new e200z4_isync(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000064)) return new e200z4_rfi(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_78(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF8007FE) == 0x4E000000)) return new e200z4_CR4_crfd_crfs_mcrf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x4E800000)) return new e200z4_CR5_crfd_crfs_mcrf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E200421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_noCond_nz_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E000421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_noCond_nz_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E600421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_noCond_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E400421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_noCond_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4EA00421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_nd_noCond_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4E800421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_nd_noCond_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E200021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_noCond_nz_revStatPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E000021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_noCond_nz_statPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E600021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_noCond_revStatPred_tolr_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E400021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_noCond_statPred_tolr_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4EA00021)) return new e200z4_SP_Check_abs_bc_bi_bo_nd_noCond_revStatPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4E800021)) return new e200z4_SP_Check_abs_bc_bi_bo_nd_noCond_statPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E200420)) return new e200z4_abs_bc_bi_bo_ctr_d_noCond_nz_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E000420)) return new e200z4_abs_bc_bi_bo_ctr_d_noCond_nz_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E600420)) return new e200z4_abs_bc_bi_bo_ctr_d_noCond_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E400420)) return new e200z4_abs_bc_bi_bo_ctr_d_noCond_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4EA00420)) return new e200z4_abs_bc_bi_bo_ctr_nd_noCond_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4E800420)) return new e200z4_abs_bc_bi_bo_ctr_nd_noCond_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E200020)) return new e200z4_abs_bc_bi_bo_d_noCond_nz_revStatPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E000020)) return new e200z4_abs_bc_bi_bo_d_noCond_nz_statPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E600020)) return new e200z4_abs_bc_bi_bo_d_noCond_revStatPred_tolr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E400020)) return new e200z4_abs_bc_bi_bo_d_noCond_statPred_tolr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4EA00020)) return new e200z4_abs_bc_bi_bo_nd_noCond_revStatPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4E800020)) return new e200z4_abs_bc_bi_bo_nd_noCond_statPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000202)) return new e200z4_crand_crba_crbb_crbd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000102)) return new e200z4_crandc_crba_crbb_crbd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000242)) return new e200z4_crba_crbb_crbd_creqv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C0001C2)) return new e200z4_crba_crbb_crbd_crnand(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000042)) return new e200z4_crba_crbb_crbd_crnor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000382)) return new e200z4_crba_crbb_crbd_cror(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000342)) return new e200z4_crba_crbb_crbd_crorc(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000182)) return new e200z4_crba_crbb_crbd_crxor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C00012C)) return new e200z4_isync(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000064)) return new e200z4_rfi(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_79(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF8007FE) == 0x4F000000)) return new e200z4_CR6_crfd_crfs_mcrf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x4F800000)) return new e200z4_CR7_crfd_crfs_mcrf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E200421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_noCond_nz_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E000421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_noCond_nz_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E600421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_noCond_revStatPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E400421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_d_noCond_statPred_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4EA00421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_nd_noCond_revStatPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4E800421)) return new e200z4_SP_Check_abs_bc_bi_bo_ctr_nd_noCond_statPred_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E200021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_noCond_nz_revStatPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E000021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_noCond_nz_statPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E600021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_noCond_revStatPred_tolr_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E400021)) return new e200z4_SP_Check_abs_bc_bi_bo_d_noCond_statPred_tolr_updatelr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4EA00021)) return new e200z4_SP_Check_abs_bc_bi_bo_nd_noCond_revStatPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4E800021)) return new e200z4_SP_Check_abs_bc_bi_bo_nd_noCond_statPred_tolr_updatelr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E200420)) return new e200z4_abs_bc_bi_bo_ctr_d_noCond_nz_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E000420)) return new e200z4_abs_bc_bi_bo_ctr_d_noCond_nz_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E600420)) return new e200z4_abs_bc_bi_bo_ctr_d_noCond_revStatPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E400420)) return new e200z4_abs_bc_bi_bo_ctr_d_noCond_statPred_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4EA00420)) return new e200z4_abs_bc_bi_bo_ctr_nd_noCond_revStatPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4E800420)) return new e200z4_abs_bc_bi_bo_ctr_nd_noCond_statPred(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E200020)) return new e200z4_abs_bc_bi_bo_d_noCond_nz_revStatPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E000020)) return new e200z4_abs_bc_bi_bo_d_noCond_nz_statPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E600020)) return new e200z4_abs_bc_bi_bo_d_noCond_revStatPred_tolr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEE007FF) == 0x4E400020)) return new e200z4_abs_bc_bi_bo_d_noCond_statPred_tolr_z(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4EA00020)) return new e200z4_abs_bc_bi_bo_nd_noCond_revStatPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFEA007FF) == 0x4E800020)) return new e200z4_abs_bc_bi_bo_nd_noCond_statPred_tolr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000202)) return new e200z4_crand_crba_crbb_crbd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000102)) return new e200z4_crandc_crba_crbb_crbd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000242)) return new e200z4_crba_crbb_crbd_creqv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C0001C2)) return new e200z4_crba_crbb_crbd_crnand(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000042)) return new e200z4_crba_crbb_crbd_crnor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000382)) return new e200z4_crba_crbb_crbd_cror(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000342)) return new e200z4_crba_crbb_crbd_crorc(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000182)) return new e200z4_crba_crbb_crbd_crxor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C00012C)) return new e200z4_isync(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x4C000064)) return new e200z4_rfi(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_80(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x50000000)) return new e200z4_mb_me_noStatus_ra_rlw_rlwimi_rs_sh(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x50000001)) return new e200z4_mb_me_ra_rlw_rlwimi_rs_sh_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_81(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x50000000)) return new e200z4_mb_me_noStatus_ra_rlw_rlwimi_rs_sh(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x50000001)) return new e200z4_mb_me_ra_rlw_rlwimi_rs_sh_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_82(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x50000000)) return new e200z4_mb_me_noStatus_ra_rlw_rlwimi_rs_sh(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x50000001)) return new e200z4_mb_me_ra_rlw_rlwimi_rs_sh_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_83(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x50000000)) return new e200z4_mb_me_noStatus_ra_rlw_rlwimi_rs_sh(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x50000001)) return new e200z4_mb_me_ra_rlw_rlwimi_rs_sh_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_84(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x54000000)) return new e200z4_mb_me_noStatus_ra_rlwinm_rs_sh(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x54000001)) return new e200z4_mb_me_ra_rlwinm_rs_sh_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_85(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x54000000)) return new e200z4_mb_me_noStatus_ra_rlwinm_rs_sh(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x54000001)) return new e200z4_mb_me_ra_rlwinm_rs_sh_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_86(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x54000000)) return new e200z4_mb_me_noStatus_ra_rlwinm_rs_sh(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x54000001)) return new e200z4_mb_me_ra_rlwinm_rs_sh_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_87(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x54000000)) return new e200z4_mb_me_noStatus_ra_rlwinm_rs_sh(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x54000001)) return new e200z4_mb_me_ra_rlwinm_rs_sh_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_92(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x5C000000)) return new e200z4_mb_me_noStatus_ra_rb_rlwnm_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x5C000001)) return new e200z4_mb_me_ra_rb_rlwnm_rs_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_93(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x5C000000)) return new e200z4_mb_me_noStatus_ra_rb_rlwnm_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x5C000001)) return new e200z4_mb_me_ra_rb_rlwnm_rs_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_94(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x5C000000)) return new e200z4_mb_me_noStatus_ra_rb_rlwnm_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x5C000001)) return new e200z4_mb_me_ra_rb_rlwnm_rs_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_95(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000001) == 0x5C000000)) return new e200z4_mb_me_noStatus_ra_rb_rlwnm_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC000001) == 0x5C000001)) return new e200z4_mb_me_ra_rb_rlwnm_rs_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_96(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x60000000)) return new e200z4_noStatus_notaftercomplemented_notshifted_or_ra_rs_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_97(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x60000000)) return new e200z4_noStatus_notaftercomplemented_notshifted_or_ra_rs_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_98(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x60000000)) return new e200z4_noStatus_notaftercomplemented_notshifted_or_ra_rs_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_99(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x60000000)) return new e200z4_noStatus_notaftercomplemented_notshifted_or_ra_rs_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_100(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x64000000)) return new e200z4_noStatus_notaftercomplemented_or_ra_rs_shifted_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_101(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x64000000)) return new e200z4_noStatus_notaftercomplemented_or_ra_rs_shifted_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_102(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x64000000)) return new e200z4_noStatus_notaftercomplemented_or_ra_rs_shifted_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_103(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x64000000)) return new e200z4_noStatus_notaftercomplemented_or_ra_rs_shifted_uimm(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_104(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x68000000)) return new e200z4_noStatus_notaftercomplemented_notshifted_ra_rs_uimm_xor(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_105(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x68000000)) return new e200z4_noStatus_notaftercomplemented_notshifted_ra_rs_uimm_xor(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_106(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x68000000)) return new e200z4_noStatus_notaftercomplemented_notshifted_ra_rs_uimm_xor(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_107(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x68000000)) return new e200z4_noStatus_notaftercomplemented_notshifted_ra_rs_uimm_xor(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_108(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x6C000000)) return new e200z4_noStatus_notaftercomplemented_ra_rs_shifted_uimm_xor(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_109(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x6C000000)) return new e200z4_noStatus_notaftercomplemented_ra_rs_shifted_uimm_xor(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_110(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x6C000000)) return new e200z4_noStatus_notaftercomplemented_ra_rs_shifted_uimm_xor(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_111(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x6C000000)) return new e200z4_noStatus_notaftercomplemented_ra_rs_shifted_uimm_xor(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_112(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x70000000)) return new e200z4_and_notaftercomplemented_notshifted_ra_rs_uimm_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_113(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x70000000)) return new e200z4_and_notaftercomplemented_notshifted_ra_rs_uimm_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_114(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x70000000)) return new e200z4_and_notaftercomplemented_notshifted_ra_rs_uimm_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_115(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x70000000)) return new e200z4_and_notaftercomplemented_notshifted_ra_rs_uimm_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_116(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x74000000)) return new e200z4_and_notaftercomplemented_ra_rs_shifted_uimm_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_117(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x74000000)) return new e200z4_and_notaftercomplemented_ra_rs_shifted_uimm_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_118(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x74000000)) return new e200z4_and_notaftercomplemented_ra_rs_shifted_uimm_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_119(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x74000000)) return new e200z4_and_notaftercomplemented_ra_rs_shifted_uimm_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_124(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF8007FE) == 0x7C000000)) return new e200z4_CR0_arith_cmp_crfd_l_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7C000040)) return new e200z4_CR0_cmp_crfd_l_logical_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7C000400)) return new e200z4_CR0_crfd_mcrxr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7C800000)) return new e200z4_CR1_arith_cmp_crfd_l_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7C800040)) return new e200z4_CR1_cmp_crfd_l_logical_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7C800400)) return new e200z4_CR1_crfd_mcrxr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000214)) return new e200z4_add_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000014)) return new e200z4_add_noOv_noStatus_ra_rb_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000215)) return new e200z4_add_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000015)) return new e200z4_add_noOv_ra_rb_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000614)) return new e200z4_add_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000414)) return new e200z4_add_noStatus_ra_rb_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000615)) return new e200z4_add_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000415)) return new e200z4_add_ra_rb_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000114)) return new e200z4_adde_noOv_noStatus_ra_rb_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000115)) return new e200z4_adde_noOv_ra_rb_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000514)) return new e200z4_adde_noStatus_ra_rb_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000515)) return new e200z4_adde_ra_rb_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D4)) return new e200z4_addme_noOv_noStatus_ra_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D5)) return new e200z4_addme_noOv_ra_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D4)) return new e200z4_addme_noStatus_ra_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D5)) return new e200z4_addme_ra_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000194)) return new e200z4_addze_noOv_noStatus_ra_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000195)) return new e200z4_addze_noOv_ra_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000594)) return new e200z4_addze_noStatus_ra_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000595)) return new e200z4_addze_ra_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003B8)) return new e200z4_aftercomplemented_and_noStatus_notcomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003B9)) return new e200z4_aftercomplemented_and_notcomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000F8)) return new e200z4_aftercomplemented_noStatus_notcomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000238)) return new e200z4_aftercomplemented_noStatus_notcomplemented_ra_rb_rs_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000F9)) return new e200z4_aftercomplemented_notcomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000239)) return new e200z4_aftercomplemented_notcomplemented_ra_rb_rs_useStatus_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002AE)) return new e200z4_algebraic_half_load_notu_ra_rb_rd_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002EE)) return new e200z4_algebraic_half_load_ra_rb_rd_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000028)) return new e200z4_algebraic_load_notu_r_ra_rb_rd_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000078)) return new e200z4_and_complemented_noStatus_notaftercomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000079)) return new e200z4_and_complemented_notaftercomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000038)) return new e200z4_and_noStatus_notaftercomplemented_notcomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000039)) return new e200z4_and_notaftercomplemented_notcomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00062C)) return new e200z4_br_half_load_notu_ra_rb_rd_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00072C)) return new e200z4_br_half_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042C)) return new e200z4_br_load_notu_ra_rb_rd_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052C)) return new e200z4_br_notu_ra_rb_rs_store_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000AE)) return new e200z4_byte_load_notu_ra_rb_rd_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000EE)) return new e200z4_byte_load_ra_rb_rd_u_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001AE)) return new e200z4_byte_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001EE)) return new e200z4_byte_ra_rb_rs_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00012D)) return new e200z4_c_notu_ra_rb_rs_store_useStatus_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000034)) return new e200z4_cntlzw_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000035)) return new e200z4_cntlzw_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000338)) return new e200z4_complemented_noStatus_notaftercomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000339)) return new e200z4_complemented_notaftercomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000120)) return new e200z4_crm_mtcrf_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005EC)) return new e200z4_dcba_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000AC)) return new e200z4_dcbf_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0003AC)) return new e200z4_dcbi_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00006C)) return new e200z4_dcbst_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00022C)) return new e200z4_dcbt_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0001EC)) return new e200z4_dcbtst_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007EC)) return new e200z4_dcbz_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003D6)) return new e200z4_divw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003D7)) return new e200z4_divw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0007D6)) return new e200z4_divw_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0007D7)) return new e200z4_divw_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000396)) return new e200z4_divwu_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000397)) return new e200z4_divwu_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000796)) return new e200z4_divwu_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000797)) return new e200z4_divwu_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00026C)) return new e200z4_eciwx_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00036C)) return new e200z4_ecowx_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0006AC)) return new e200z4_eieio(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7C800008)) return new e200z4_eq_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000774)) return new e200z4_extsb_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000775)) return new e200z4_extsb_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000734)) return new e200z4_extsh_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000735)) return new e200z4_extsh_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004AE)) return new e200z4_fd_frd_load_notu_ra_rb_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004EE)) return new e200z4_fd_frd_load_ra_rb_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005AE)) return new e200z4_fd_frs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005EE)) return new e200z4_fd_frs_ra_rb_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007AE)) return new e200z4_fiw_frs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042E)) return new e200z4_frd_fs_load_notu_ra_rb_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00046E)) return new e200z4_frd_fs_load_ra_rb_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052E)) return new e200z4_frs_fs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00056E)) return new e200z4_frs_fs_ra_rb_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00022E)) return new e200z4_half_load_notu_ra_rb_rd_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00026E)) return new e200z4_half_load_ra_rb_rd_u_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00032E)) return new e200z4_half_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00036E)) return new e200z4_half_ra_rb_rs_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004AA)) return new e200z4_i_load_nb_notu_ra_rd_sw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005AA)) return new e200z4_i_nb_notu_ra_rs_store_sw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007AC)) return new e200z4_icbi_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7CA00008)) return new e200z4_lge_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7C200008)) return new e200z4_lgt_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7CC00008)) return new e200z4_lle_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7C400008)) return new e200z4_llt_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042A)) return new e200z4_load_notu_ra_rb_rd_sw_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00002E)) return new e200z4_load_notu_ra_rb_rd_word_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00006E)) return new e200z4_load_ra_rb_rd_u_word_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000026)) return new e200z4_mfcr_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000A6)) return new e200z4_mfmsr_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002A6)) return new e200z4_mfspr_rd_spr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004A6)) return new e200z4_mfsr_rd_sr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000526)) return new e200z4_mfsrin_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0002E6)) return new e200z4_mftb_rd_tbr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000124)) return new e200z4_mtmsr_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0003A6)) return new e200z4_mtspr_rs_spr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001A4)) return new e200z4_mtsr_rs_sr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001E4)) return new e200z4_mtsrin_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000096)) return new e200z4_mulhw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000097)) return new e200z4_mulhw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000016)) return new e200z4_mulhwu_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000017)) return new e200z4_mulhwu_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D6)) return new e200z4_mullw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D7)) return new e200z4_mullw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D6)) return new e200z4_mullw_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D7)) return new e200z4_mullw_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000D0)) return new e200z4_neg_noOv_noStatus_ra_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000D1)) return new e200z4_neg_noOv_ra_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004D0)) return new e200z4_neg_noStatus_ra_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004D1)) return new e200z4_neg_ra_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000050)) return new e200z4_noOv_noStatus_ra_rb_rd_subf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000010)) return new e200z4_noOv_noStatus_ra_rb_rd_subf_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000110)) return new e200z4_noOv_noStatus_ra_rb_rd_subfe_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D0)) return new e200z4_noOv_noStatus_ra_rd_subfme_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000190)) return new e200z4_noOv_noStatus_ra_rd_subfze_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000051)) return new e200z4_noOv_ra_rb_rd_subf_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000011)) return new e200z4_noOv_ra_rb_rd_subf_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000111)) return new e200z4_noOv_ra_rb_rd_subfe_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D1)) return new e200z4_noOv_ra_rd_subfme_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000191)) return new e200z4_noOv_ra_rd_subfze_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000378)) return new e200z4_noStatus_notaftercomplemented_notcomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000278)) return new e200z4_noStatus_notaftercomplemented_notcomplemented_ra_rb_rs_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000450)) return new e200z4_noStatus_ra_rb_rd_subf_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000410)) return new e200z4_noStatus_ra_rb_rd_subf_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000510)) return new e200z4_noStatus_ra_rb_rd_subfe_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000030)) return new e200z4_noStatus_ra_rb_rs_slw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000630)) return new e200z4_noStatus_ra_rb_rs_sraw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000430)) return new e200z4_noStatus_ra_rb_rs_srw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D0)) return new e200z4_noStatus_ra_rd_subfme_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000590)) return new e200z4_noStatus_ra_rd_subfze_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000670)) return new e200z4_noStatus_ra_rs_sh_sraw(pcBase,chunk1);
	if((((chunk_32_0 & 0xFFE007FF) == 0x7C000008) || ((chunk_32_0 & 0xFFE007FF) == 0x7C600008) || ((chunk_32_0 & 0xFFE007FF) == 0x7CE00008) || ((chunk_32_0 & 0xFF6007FF) == 0x7D200008) || ((chunk_32_0 & 0xFF4007FF) == 0x7D400008) || ((chunk_32_0 & 0xFF6007FF) == 0x7E200008) || ((chunk_32_0 & 0xFF4007FF) == 0x7E400008) || ((chunk_32_0 & 0xFFE007FF) == 0x7F200008) || ((chunk_32_0 & 0xFFC007FF) == 0x7F400008) || ((chunk_32_0 & 0xFF8007FF) == 0x7F800008))) return new e200z4_notSimple_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000379)) return new e200z4_notaftercomplemented_notcomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000279)) return new e200z4_notaftercomplemented_notcomplemented_ra_rb_rs_useStatus_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052A)) return new e200z4_notu_ra_rb_rs_store_sw_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00012E)) return new e200z4_notu_ra_rb_rs_store_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000451)) return new e200z4_ra_rb_rd_subf_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000411)) return new e200z4_ra_rb_rd_subf_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000511)) return new e200z4_ra_rb_rd_subfe_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000031)) return new e200z4_ra_rb_rs_slw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000631)) return new e200z4_ra_rb_rs_sraw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000431)) return new e200z4_ra_rb_rs_srw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00016E)) return new e200z4_ra_rb_rs_store_u_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D1)) return new e200z4_ra_rd_subfme_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000591)) return new e200z4_ra_rd_subfze_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000671)) return new e200z4_ra_rs_sh_sraw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000264)) return new e200z4_rb_tlbie(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004AC)) return new e200z4_sync(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0002E4)) return new e200z4_tlbia(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00046C)) return new e200z4_tlbsync(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_125(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF8007FE) == 0x7D000000)) return new e200z4_CR2_arith_cmp_crfd_l_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7D000040)) return new e200z4_CR2_cmp_crfd_l_logical_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7D000400)) return new e200z4_CR2_crfd_mcrxr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7D800000)) return new e200z4_CR3_arith_cmp_crfd_l_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7D800040)) return new e200z4_CR3_cmp_crfd_l_logical_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7D800400)) return new e200z4_CR3_crfd_mcrxr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000214)) return new e200z4_add_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000014)) return new e200z4_add_noOv_noStatus_ra_rb_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000215)) return new e200z4_add_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000015)) return new e200z4_add_noOv_ra_rb_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000614)) return new e200z4_add_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000414)) return new e200z4_add_noStatus_ra_rb_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000615)) return new e200z4_add_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000415)) return new e200z4_add_ra_rb_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000114)) return new e200z4_adde_noOv_noStatus_ra_rb_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000115)) return new e200z4_adde_noOv_ra_rb_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000514)) return new e200z4_adde_noStatus_ra_rb_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000515)) return new e200z4_adde_ra_rb_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D4)) return new e200z4_addme_noOv_noStatus_ra_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D5)) return new e200z4_addme_noOv_ra_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D4)) return new e200z4_addme_noStatus_ra_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D5)) return new e200z4_addme_ra_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000194)) return new e200z4_addze_noOv_noStatus_ra_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000195)) return new e200z4_addze_noOv_ra_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000594)) return new e200z4_addze_noStatus_ra_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000595)) return new e200z4_addze_ra_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003B8)) return new e200z4_aftercomplemented_and_noStatus_notcomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003B9)) return new e200z4_aftercomplemented_and_notcomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000F8)) return new e200z4_aftercomplemented_noStatus_notcomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000238)) return new e200z4_aftercomplemented_noStatus_notcomplemented_ra_rb_rs_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000F9)) return new e200z4_aftercomplemented_notcomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000239)) return new e200z4_aftercomplemented_notcomplemented_ra_rb_rs_useStatus_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002AE)) return new e200z4_algebraic_half_load_notu_ra_rb_rd_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002EE)) return new e200z4_algebraic_half_load_ra_rb_rd_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000028)) return new e200z4_algebraic_load_notu_r_ra_rb_rd_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000078)) return new e200z4_and_complemented_noStatus_notaftercomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000079)) return new e200z4_and_complemented_notaftercomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000038)) return new e200z4_and_noStatus_notaftercomplemented_notcomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000039)) return new e200z4_and_notaftercomplemented_notcomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00062C)) return new e200z4_br_half_load_notu_ra_rb_rd_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00072C)) return new e200z4_br_half_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042C)) return new e200z4_br_load_notu_ra_rb_rd_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052C)) return new e200z4_br_notu_ra_rb_rs_store_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000AE)) return new e200z4_byte_load_notu_ra_rb_rd_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000EE)) return new e200z4_byte_load_ra_rb_rd_u_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001AE)) return new e200z4_byte_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001EE)) return new e200z4_byte_ra_rb_rs_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00012D)) return new e200z4_c_notu_ra_rb_rs_store_useStatus_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000034)) return new e200z4_cntlzw_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000035)) return new e200z4_cntlzw_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000338)) return new e200z4_complemented_noStatus_notaftercomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000339)) return new e200z4_complemented_notaftercomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000120)) return new e200z4_crm_mtcrf_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005EC)) return new e200z4_dcba_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000AC)) return new e200z4_dcbf_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0003AC)) return new e200z4_dcbi_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00006C)) return new e200z4_dcbst_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00022C)) return new e200z4_dcbt_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0001EC)) return new e200z4_dcbtst_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007EC)) return new e200z4_dcbz_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003D6)) return new e200z4_divw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003D7)) return new e200z4_divw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0007D6)) return new e200z4_divw_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0007D7)) return new e200z4_divw_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000396)) return new e200z4_divwu_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000397)) return new e200z4_divwu_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000796)) return new e200z4_divwu_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000797)) return new e200z4_divwu_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00026C)) return new e200z4_eciwx_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00036C)) return new e200z4_ecowx_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0006AC)) return new e200z4_eieio(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000774)) return new e200z4_extsb_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000775)) return new e200z4_extsb_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000734)) return new e200z4_extsh_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000735)) return new e200z4_extsh_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004AE)) return new e200z4_fd_frd_load_notu_ra_rb_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004EE)) return new e200z4_fd_frd_load_ra_rb_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005AE)) return new e200z4_fd_frs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005EE)) return new e200z4_fd_frs_ra_rb_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007AE)) return new e200z4_fiw_frs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042E)) return new e200z4_frd_fs_load_notu_ra_rb_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00046E)) return new e200z4_frd_fs_load_ra_rb_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052E)) return new e200z4_frs_fs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00056E)) return new e200z4_frs_fs_ra_rb_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7D800008)) return new e200z4_ge_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7D000008)) return new e200z4_gt_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00022E)) return new e200z4_half_load_notu_ra_rb_rd_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00026E)) return new e200z4_half_load_ra_rb_rd_u_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00032E)) return new e200z4_half_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00036E)) return new e200z4_half_ra_rb_rs_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004AA)) return new e200z4_i_load_nb_notu_ra_rd_sw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005AA)) return new e200z4_i_nb_notu_ra_rs_store_sw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007AC)) return new e200z4_icbi_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042A)) return new e200z4_load_notu_ra_rb_rd_sw_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00002E)) return new e200z4_load_notu_ra_rb_rd_word_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00006E)) return new e200z4_load_ra_rb_rd_u_word_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000026)) return new e200z4_mfcr_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000A6)) return new e200z4_mfmsr_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002A6)) return new e200z4_mfspr_rd_spr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004A6)) return new e200z4_mfsr_rd_sr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000526)) return new e200z4_mfsrin_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0002E6)) return new e200z4_mftb_rd_tbr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000124)) return new e200z4_mtmsr_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0003A6)) return new e200z4_mtspr_rs_spr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001A4)) return new e200z4_mtsr_rs_sr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001E4)) return new e200z4_mtsrin_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000096)) return new e200z4_mulhw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000097)) return new e200z4_mulhw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000016)) return new e200z4_mulhwu_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000017)) return new e200z4_mulhwu_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D6)) return new e200z4_mullw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D7)) return new e200z4_mullw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D6)) return new e200z4_mullw_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D7)) return new e200z4_mullw_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000D0)) return new e200z4_neg_noOv_noStatus_ra_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000D1)) return new e200z4_neg_noOv_ra_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004D0)) return new e200z4_neg_noStatus_ra_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004D1)) return new e200z4_neg_ra_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000050)) return new e200z4_noOv_noStatus_ra_rb_rd_subf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000010)) return new e200z4_noOv_noStatus_ra_rb_rd_subf_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000110)) return new e200z4_noOv_noStatus_ra_rb_rd_subfe_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D0)) return new e200z4_noOv_noStatus_ra_rd_subfme_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000190)) return new e200z4_noOv_noStatus_ra_rd_subfze_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000051)) return new e200z4_noOv_ra_rb_rd_subf_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000011)) return new e200z4_noOv_ra_rb_rd_subf_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000111)) return new e200z4_noOv_ra_rb_rd_subfe_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D1)) return new e200z4_noOv_ra_rd_subfme_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000191)) return new e200z4_noOv_ra_rd_subfze_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000378)) return new e200z4_noStatus_notaftercomplemented_notcomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000278)) return new e200z4_noStatus_notaftercomplemented_notcomplemented_ra_rb_rs_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000450)) return new e200z4_noStatus_ra_rb_rd_subf_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000410)) return new e200z4_noStatus_ra_rb_rd_subf_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000510)) return new e200z4_noStatus_ra_rb_rd_subfe_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000030)) return new e200z4_noStatus_ra_rb_rs_slw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000630)) return new e200z4_noStatus_ra_rb_rs_sraw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000430)) return new e200z4_noStatus_ra_rb_rs_srw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D0)) return new e200z4_noStatus_ra_rd_subfme_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000590)) return new e200z4_noStatus_ra_rd_subfze_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000670)) return new e200z4_noStatus_ra_rs_sh_sraw(pcBase,chunk1);
	if((((chunk_32_0 & 0xFFE007FF) == 0x7C000008) || ((chunk_32_0 & 0xFFE007FF) == 0x7C600008) || ((chunk_32_0 & 0xFFE007FF) == 0x7CE00008) || ((chunk_32_0 & 0xFF6007FF) == 0x7D200008) || ((chunk_32_0 & 0xFF4007FF) == 0x7D400008) || ((chunk_32_0 & 0xFF6007FF) == 0x7E200008) || ((chunk_32_0 & 0xFF4007FF) == 0x7E400008) || ((chunk_32_0 & 0xFFE007FF) == 0x7F200008) || ((chunk_32_0 & 0xFFC007FF) == 0x7F400008) || ((chunk_32_0 & 0xFF8007FF) == 0x7F800008))) return new e200z4_notSimple_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000379)) return new e200z4_notaftercomplemented_notcomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000279)) return new e200z4_notaftercomplemented_notcomplemented_ra_rb_rs_useStatus_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052A)) return new e200z4_notu_ra_rb_rs_store_sw_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00012E)) return new e200z4_notu_ra_rb_rs_store_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000451)) return new e200z4_ra_rb_rd_subf_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000411)) return new e200z4_ra_rb_rd_subf_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000511)) return new e200z4_ra_rb_rd_subfe_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000031)) return new e200z4_ra_rb_rs_slw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000631)) return new e200z4_ra_rb_rs_sraw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000431)) return new e200z4_ra_rb_rs_srw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00016E)) return new e200z4_ra_rb_rs_store_u_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D1)) return new e200z4_ra_rd_subfme_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000591)) return new e200z4_ra_rd_subfze_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000671)) return new e200z4_ra_rs_sh_sraw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000264)) return new e200z4_rb_tlbie(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004AC)) return new e200z4_sync(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0002E4)) return new e200z4_tlbia(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00046C)) return new e200z4_tlbsync(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_126(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF8007FE) == 0x7E000000)) return new e200z4_CR4_arith_cmp_crfd_l_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7E000040)) return new e200z4_CR4_cmp_crfd_l_logical_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7E000400)) return new e200z4_CR4_crfd_mcrxr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7E800000)) return new e200z4_CR5_arith_cmp_crfd_l_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7E800040)) return new e200z4_CR5_cmp_crfd_l_logical_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7E800400)) return new e200z4_CR5_crfd_mcrxr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000214)) return new e200z4_add_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000014)) return new e200z4_add_noOv_noStatus_ra_rb_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000215)) return new e200z4_add_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000015)) return new e200z4_add_noOv_ra_rb_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000614)) return new e200z4_add_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000414)) return new e200z4_add_noStatus_ra_rb_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000615)) return new e200z4_add_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000415)) return new e200z4_add_ra_rb_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000114)) return new e200z4_adde_noOv_noStatus_ra_rb_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000115)) return new e200z4_adde_noOv_ra_rb_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000514)) return new e200z4_adde_noStatus_ra_rb_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000515)) return new e200z4_adde_ra_rb_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D4)) return new e200z4_addme_noOv_noStatus_ra_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D5)) return new e200z4_addme_noOv_ra_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D4)) return new e200z4_addme_noStatus_ra_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D5)) return new e200z4_addme_ra_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000194)) return new e200z4_addze_noOv_noStatus_ra_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000195)) return new e200z4_addze_noOv_ra_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000594)) return new e200z4_addze_noStatus_ra_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000595)) return new e200z4_addze_ra_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003B8)) return new e200z4_aftercomplemented_and_noStatus_notcomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003B9)) return new e200z4_aftercomplemented_and_notcomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000F8)) return new e200z4_aftercomplemented_noStatus_notcomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000238)) return new e200z4_aftercomplemented_noStatus_notcomplemented_ra_rb_rs_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000F9)) return new e200z4_aftercomplemented_notcomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000239)) return new e200z4_aftercomplemented_notcomplemented_ra_rb_rs_useStatus_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002AE)) return new e200z4_algebraic_half_load_notu_ra_rb_rd_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002EE)) return new e200z4_algebraic_half_load_ra_rb_rd_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000028)) return new e200z4_algebraic_load_notu_r_ra_rb_rd_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000078)) return new e200z4_and_complemented_noStatus_notaftercomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000079)) return new e200z4_and_complemented_notaftercomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000038)) return new e200z4_and_noStatus_notaftercomplemented_notcomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000039)) return new e200z4_and_notaftercomplemented_notcomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00062C)) return new e200z4_br_half_load_notu_ra_rb_rd_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00072C)) return new e200z4_br_half_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042C)) return new e200z4_br_load_notu_ra_rb_rd_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052C)) return new e200z4_br_notu_ra_rb_rs_store_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000AE)) return new e200z4_byte_load_notu_ra_rb_rd_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000EE)) return new e200z4_byte_load_ra_rb_rd_u_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001AE)) return new e200z4_byte_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001EE)) return new e200z4_byte_ra_rb_rs_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00012D)) return new e200z4_c_notu_ra_rb_rs_store_useStatus_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000034)) return new e200z4_cntlzw_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000035)) return new e200z4_cntlzw_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000338)) return new e200z4_complemented_noStatus_notaftercomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000339)) return new e200z4_complemented_notaftercomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000120)) return new e200z4_crm_mtcrf_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005EC)) return new e200z4_dcba_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000AC)) return new e200z4_dcbf_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0003AC)) return new e200z4_dcbi_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00006C)) return new e200z4_dcbst_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00022C)) return new e200z4_dcbt_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0001EC)) return new e200z4_dcbtst_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007EC)) return new e200z4_dcbz_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003D6)) return new e200z4_divw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003D7)) return new e200z4_divw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0007D6)) return new e200z4_divw_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0007D7)) return new e200z4_divw_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000396)) return new e200z4_divwu_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000397)) return new e200z4_divwu_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000796)) return new e200z4_divwu_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000797)) return new e200z4_divwu_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00026C)) return new e200z4_eciwx_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00036C)) return new e200z4_ecowx_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0006AC)) return new e200z4_eieio(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000774)) return new e200z4_extsb_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000775)) return new e200z4_extsb_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000734)) return new e200z4_extsh_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000735)) return new e200z4_extsh_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004AE)) return new e200z4_fd_frd_load_notu_ra_rb_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004EE)) return new e200z4_fd_frd_load_ra_rb_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005AE)) return new e200z4_fd_frs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005EE)) return new e200z4_fd_frs_ra_rb_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007AE)) return new e200z4_fiw_frs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042E)) return new e200z4_frd_fs_load_notu_ra_rb_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00046E)) return new e200z4_frd_fs_load_ra_rb_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052E)) return new e200z4_frs_fs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00056E)) return new e200z4_frs_fs_ra_rb_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00022E)) return new e200z4_half_load_notu_ra_rb_rd_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00026E)) return new e200z4_half_load_ra_rb_rd_u_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00032E)) return new e200z4_half_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00036E)) return new e200z4_half_ra_rb_rs_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004AA)) return new e200z4_i_load_nb_notu_ra_rd_sw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005AA)) return new e200z4_i_nb_notu_ra_rs_store_sw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007AC)) return new e200z4_icbi_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7E800008)) return new e200z4_le_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042A)) return new e200z4_load_notu_ra_rb_rd_sw_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00002E)) return new e200z4_load_notu_ra_rb_rd_word_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00006E)) return new e200z4_load_ra_rb_rd_u_word_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7E000008)) return new e200z4_lt_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000026)) return new e200z4_mfcr_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000A6)) return new e200z4_mfmsr_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002A6)) return new e200z4_mfspr_rd_spr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004A6)) return new e200z4_mfsr_rd_sr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000526)) return new e200z4_mfsrin_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0002E6)) return new e200z4_mftb_rd_tbr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000124)) return new e200z4_mtmsr_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0003A6)) return new e200z4_mtspr_rs_spr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001A4)) return new e200z4_mtsr_rs_sr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001E4)) return new e200z4_mtsrin_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000096)) return new e200z4_mulhw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000097)) return new e200z4_mulhw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000016)) return new e200z4_mulhwu_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000017)) return new e200z4_mulhwu_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D6)) return new e200z4_mullw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D7)) return new e200z4_mullw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D6)) return new e200z4_mullw_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D7)) return new e200z4_mullw_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000D0)) return new e200z4_neg_noOv_noStatus_ra_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000D1)) return new e200z4_neg_noOv_ra_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004D0)) return new e200z4_neg_noStatus_ra_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004D1)) return new e200z4_neg_ra_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000050)) return new e200z4_noOv_noStatus_ra_rb_rd_subf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000010)) return new e200z4_noOv_noStatus_ra_rb_rd_subf_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000110)) return new e200z4_noOv_noStatus_ra_rb_rd_subfe_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D0)) return new e200z4_noOv_noStatus_ra_rd_subfme_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000190)) return new e200z4_noOv_noStatus_ra_rd_subfze_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000051)) return new e200z4_noOv_ra_rb_rd_subf_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000011)) return new e200z4_noOv_ra_rb_rd_subf_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000111)) return new e200z4_noOv_ra_rb_rd_subfe_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D1)) return new e200z4_noOv_ra_rd_subfme_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000191)) return new e200z4_noOv_ra_rd_subfze_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000378)) return new e200z4_noStatus_notaftercomplemented_notcomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000278)) return new e200z4_noStatus_notaftercomplemented_notcomplemented_ra_rb_rs_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000450)) return new e200z4_noStatus_ra_rb_rd_subf_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000410)) return new e200z4_noStatus_ra_rb_rd_subf_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000510)) return new e200z4_noStatus_ra_rb_rd_subfe_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000030)) return new e200z4_noStatus_ra_rb_rs_slw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000630)) return new e200z4_noStatus_ra_rb_rs_sraw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000430)) return new e200z4_noStatus_ra_rb_rs_srw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D0)) return new e200z4_noStatus_ra_rd_subfme_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000590)) return new e200z4_noStatus_ra_rd_subfze_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000670)) return new e200z4_noStatus_ra_rs_sh_sraw(pcBase,chunk1);
	if((((chunk_32_0 & 0xFFE007FF) == 0x7C000008) || ((chunk_32_0 & 0xFFE007FF) == 0x7C600008) || ((chunk_32_0 & 0xFFE007FF) == 0x7CE00008) || ((chunk_32_0 & 0xFF6007FF) == 0x7D200008) || ((chunk_32_0 & 0xFF4007FF) == 0x7D400008) || ((chunk_32_0 & 0xFF6007FF) == 0x7E200008) || ((chunk_32_0 & 0xFF4007FF) == 0x7E400008) || ((chunk_32_0 & 0xFFE007FF) == 0x7F200008) || ((chunk_32_0 & 0xFFC007FF) == 0x7F400008) || ((chunk_32_0 & 0xFF8007FF) == 0x7F800008))) return new e200z4_notSimple_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000379)) return new e200z4_notaftercomplemented_notcomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000279)) return new e200z4_notaftercomplemented_notcomplemented_ra_rb_rs_useStatus_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052A)) return new e200z4_notu_ra_rb_rs_store_sw_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00012E)) return new e200z4_notu_ra_rb_rs_store_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000451)) return new e200z4_ra_rb_rd_subf_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000411)) return new e200z4_ra_rb_rd_subf_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000511)) return new e200z4_ra_rb_rd_subfe_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000031)) return new e200z4_ra_rb_rs_slw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000631)) return new e200z4_ra_rb_rs_sraw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000431)) return new e200z4_ra_rb_rs_srw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00016E)) return new e200z4_ra_rb_rs_store_u_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D1)) return new e200z4_ra_rd_subfme_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000591)) return new e200z4_ra_rd_subfze_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000671)) return new e200z4_ra_rs_sh_sraw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000264)) return new e200z4_rb_tlbie(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004AC)) return new e200z4_sync(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0002E4)) return new e200z4_tlbia(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00046C)) return new e200z4_tlbsync(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_127(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFF8007FE) == 0x7F000000)) return new e200z4_CR6_arith_cmp_crfd_l_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7F000040)) return new e200z4_CR6_cmp_crfd_l_logical_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7F000400)) return new e200z4_CR6_crfd_mcrxr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7F800000)) return new e200z4_CR7_arith_cmp_crfd_l_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7F800040)) return new e200z4_CR7_cmp_crfd_l_logical_ra_rb_reg(pcBase,chunk1);
	if(((chunk_32_0 & 0xFF8007FE) == 0x7F800400)) return new e200z4_CR7_crfd_mcrxr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000214)) return new e200z4_add_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000014)) return new e200z4_add_noOv_noStatus_ra_rb_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000215)) return new e200z4_add_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000015)) return new e200z4_add_noOv_ra_rb_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000614)) return new e200z4_add_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000414)) return new e200z4_add_noStatus_ra_rb_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000615)) return new e200z4_add_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000415)) return new e200z4_add_ra_rb_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000114)) return new e200z4_adde_noOv_noStatus_ra_rb_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000115)) return new e200z4_adde_noOv_ra_rb_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000514)) return new e200z4_adde_noStatus_ra_rb_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000515)) return new e200z4_adde_ra_rb_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D4)) return new e200z4_addme_noOv_noStatus_ra_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D5)) return new e200z4_addme_noOv_ra_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D4)) return new e200z4_addme_noStatus_ra_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D5)) return new e200z4_addme_ra_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000194)) return new e200z4_addze_noOv_noStatus_ra_rd_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000195)) return new e200z4_addze_noOv_ra_rd_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000594)) return new e200z4_addze_noStatus_ra_rd_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000595)) return new e200z4_addze_ra_rd_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003B8)) return new e200z4_aftercomplemented_and_noStatus_notcomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003B9)) return new e200z4_aftercomplemented_and_notcomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000F8)) return new e200z4_aftercomplemented_noStatus_notcomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000238)) return new e200z4_aftercomplemented_noStatus_notcomplemented_ra_rb_rs_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000F9)) return new e200z4_aftercomplemented_notcomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000239)) return new e200z4_aftercomplemented_notcomplemented_ra_rb_rs_useStatus_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002AE)) return new e200z4_algebraic_half_load_notu_ra_rb_rd_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002EE)) return new e200z4_algebraic_half_load_ra_rb_rd_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000028)) return new e200z4_algebraic_load_notu_r_ra_rb_rd_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000078)) return new e200z4_and_complemented_noStatus_notaftercomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000079)) return new e200z4_and_complemented_notaftercomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000038)) return new e200z4_and_noStatus_notaftercomplemented_notcomplemented_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000039)) return new e200z4_and_notaftercomplemented_notcomplemented_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00062C)) return new e200z4_br_half_load_notu_ra_rb_rd_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00072C)) return new e200z4_br_half_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042C)) return new e200z4_br_load_notu_ra_rb_rd_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052C)) return new e200z4_br_notu_ra_rb_rs_store_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000AE)) return new e200z4_byte_load_notu_ra_rb_rd_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000EE)) return new e200z4_byte_load_ra_rb_rd_u_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001AE)) return new e200z4_byte_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001EE)) return new e200z4_byte_ra_rb_rs_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00012D)) return new e200z4_c_notu_ra_rb_rs_store_useStatus_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000034)) return new e200z4_cntlzw_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000035)) return new e200z4_cntlzw_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000338)) return new e200z4_complemented_noStatus_notaftercomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000339)) return new e200z4_complemented_notaftercomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000120)) return new e200z4_crm_mtcrf_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005EC)) return new e200z4_dcba_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000AC)) return new e200z4_dcbf_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0003AC)) return new e200z4_dcbi_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00006C)) return new e200z4_dcbst_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00022C)) return new e200z4_dcbt_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0001EC)) return new e200z4_dcbtst_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007EC)) return new e200z4_dcbz_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003D6)) return new e200z4_divw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0003D7)) return new e200z4_divw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0007D6)) return new e200z4_divw_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0007D7)) return new e200z4_divw_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000396)) return new e200z4_divwu_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000397)) return new e200z4_divwu_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000796)) return new e200z4_divwu_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000797)) return new e200z4_divwu_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00026C)) return new e200z4_eciwx_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00036C)) return new e200z4_ecowx_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0006AC)) return new e200z4_eieio(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000774)) return new e200z4_extsb_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000775)) return new e200z4_extsb_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000734)) return new e200z4_extsh_noStatus_ra_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000735)) return new e200z4_extsh_ra_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004AE)) return new e200z4_fd_frd_load_notu_ra_rb_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004EE)) return new e200z4_fd_frd_load_ra_rb_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005AE)) return new e200z4_fd_frs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005EE)) return new e200z4_fd_frs_ra_rb_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007AE)) return new e200z4_fiw_frs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042E)) return new e200z4_frd_fs_load_notu_ra_rb_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00046E)) return new e200z4_frd_fs_load_ra_rb_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052E)) return new e200z4_frs_fs_notu_ra_rb_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00056E)) return new e200z4_frs_fs_ra_rb_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00022E)) return new e200z4_half_load_notu_ra_rb_rd_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00026E)) return new e200z4_half_load_ra_rb_rd_u_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00032E)) return new e200z4_half_notu_ra_rb_rs_store_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00036E)) return new e200z4_half_ra_rb_rs_store_u_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0004AA)) return new e200z4_i_load_nb_notu_ra_rd_sw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0005AA)) return new e200z4_i_nb_notu_ra_rs_store_sw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0007AC)) return new e200z4_icbi_ra_rb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00042A)) return new e200z4_load_notu_ra_rb_rd_sw_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C00002E)) return new e200z4_load_notu_ra_rb_rd_word_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00006E)) return new e200z4_load_ra_rb_rd_u_word_x_zero(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000026)) return new e200z4_mfcr_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0000A6)) return new e200z4_mfmsr_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0002A6)) return new e200z4_mfspr_rd_spr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004A6)) return new e200z4_mfsr_rd_sr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000526)) return new e200z4_mfsrin_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0002E6)) return new e200z4_mftb_rd_tbr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C000124)) return new e200z4_mtmsr_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C0003A6)) return new e200z4_mtspr_rs_spr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001A4)) return new e200z4_mtsr_rs_sr(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001E4)) return new e200z4_mtsrin_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000096)) return new e200z4_mulhw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000097)) return new e200z4_mulhw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000016)) return new e200z4_mulhwu_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0003FF) == 0x7C000017)) return new e200z4_mulhwu_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D6)) return new e200z4_mullw_noOv_noStatus_ra_rb_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D7)) return new e200z4_mullw_noOv_ra_rb_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D6)) return new e200z4_mullw_noStatus_ra_rb_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D7)) return new e200z4_mullw_ra_rb_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0x7F000008)) return new e200z4_ne_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000D0)) return new e200z4_neg_noOv_noStatus_ra_rd(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0000D1)) return new e200z4_neg_noOv_ra_rd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004D0)) return new e200z4_neg_noStatus_ra_rd_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004D1)) return new e200z4_neg_ra_rd_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000050)) return new e200z4_noOv_noStatus_ra_rb_rd_subf(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000010)) return new e200z4_noOv_noStatus_ra_rb_rd_subf_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000110)) return new e200z4_noOv_noStatus_ra_rb_rd_subfe_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D0)) return new e200z4_noOv_noStatus_ra_rd_subfme_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000190)) return new e200z4_noOv_noStatus_ra_rd_subfze_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000051)) return new e200z4_noOv_ra_rb_rd_subf_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000011)) return new e200z4_noOv_ra_rb_rd_subf_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000111)) return new e200z4_noOv_ra_rb_rd_subfe_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0001D1)) return new e200z4_noOv_ra_rd_subfme_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000191)) return new e200z4_noOv_ra_rd_subfze_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000378)) return new e200z4_noStatus_notaftercomplemented_notcomplemented_or_ra_rb_rs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000278)) return new e200z4_noStatus_notaftercomplemented_notcomplemented_ra_rb_rs_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000450)) return new e200z4_noStatus_ra_rb_rd_subf_useOv(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000410)) return new e200z4_noStatus_ra_rb_rd_subf_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000510)) return new e200z4_noStatus_ra_rb_rd_subfe_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000030)) return new e200z4_noStatus_ra_rb_rs_slw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000630)) return new e200z4_noStatus_ra_rb_rs_sraw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000430)) return new e200z4_noStatus_ra_rb_rs_srw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D0)) return new e200z4_noStatus_ra_rd_subfme_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000590)) return new e200z4_noStatus_ra_rd_subfze_useOv_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000670)) return new e200z4_noStatus_ra_rs_sh_sraw(pcBase,chunk1);
	if((((chunk_32_0 & 0xFFE007FF) == 0x7C000008) || ((chunk_32_0 & 0xFFE007FF) == 0x7C600008) || ((chunk_32_0 & 0xFFE007FF) == 0x7CE00008) || ((chunk_32_0 & 0xFF6007FF) == 0x7D200008) || ((chunk_32_0 & 0xFF4007FF) == 0x7D400008) || ((chunk_32_0 & 0xFF6007FF) == 0x7E200008) || ((chunk_32_0 & 0xFF4007FF) == 0x7E400008) || ((chunk_32_0 & 0xFFE007FF) == 0x7F200008) || ((chunk_32_0 & 0xFFC007FF) == 0x7F400008) || ((chunk_32_0 & 0xFF8007FF) == 0x7F800008))) return new e200z4_notSimple_ra_rb_reg_to_f_tw(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000379)) return new e200z4_notaftercomplemented_notcomplemented_or_ra_rb_rs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000279)) return new e200z4_notaftercomplemented_notcomplemented_ra_rb_rs_useStatus_xor(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00052A)) return new e200z4_notu_ra_rb_rs_store_sw_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00012E)) return new e200z4_notu_ra_rb_rs_store_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000451)) return new e200z4_ra_rb_rd_subf_useOv_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000411)) return new e200z4_ra_rb_rd_subf_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000511)) return new e200z4_ra_rb_rd_subfe_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000031)) return new e200z4_ra_rb_rs_slw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000631)) return new e200z4_ra_rb_rs_sraw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000431)) return new e200z4_ra_rb_rs_srw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00016E)) return new e200z4_ra_rb_rs_store_u_word_x(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0005D1)) return new e200z4_ra_rd_subfme_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000591)) return new e200z4_ra_rd_subfze_useOv_useStatus_withCarry(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000671)) return new e200z4_ra_rs_sh_sraw_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C000264)) return new e200z4_rb_tlbie(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0004AC)) return new e200z4_sync(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0x7C0002E4)) return new e200z4_tlbia(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FE) == 0x7C00046C)) return new e200z4_tlbsync(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_128(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x80000000)) return new e200z4_d_load_notu_ra_rd_word_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_129(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x80000000)) return new e200z4_d_load_notu_ra_rd_word_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_130(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x80000000)) return new e200z4_d_load_notu_ra_rd_word_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_131(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x80000000)) return new e200z4_d_load_notu_ra_rd_word_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_132(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x84000000)) return new e200z4_d_load_ra_rd_u_word_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_133(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x84000000)) return new e200z4_d_load_ra_rd_u_word_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_134(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x84000000)) return new e200z4_d_load_ra_rd_u_word_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_135(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x84000000)) return new e200z4_d_load_ra_rd_u_word_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_136(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x88000000)) return new e200z4_byte_d_load_notu_ra_rd_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_137(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x88000000)) return new e200z4_byte_d_load_notu_ra_rd_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_138(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x88000000)) return new e200z4_byte_d_load_notu_ra_rd_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_139(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x88000000)) return new e200z4_byte_d_load_notu_ra_rd_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_140(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x8C000000)) return new e200z4_byte_d_load_ra_rd_u_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_141(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x8C000000)) return new e200z4_byte_d_load_ra_rd_u_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_142(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x8C000000)) return new e200z4_byte_d_load_ra_rd_u_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_143(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x8C000000)) return new e200z4_byte_d_load_ra_rd_u_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_144(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x90000000)) return new e200z4_d_notu_ra_rs_store_word(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_145(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x90000000)) return new e200z4_d_notu_ra_rs_store_word(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_146(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x90000000)) return new e200z4_d_notu_ra_rs_store_word(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_147(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x90000000)) return new e200z4_d_notu_ra_rs_store_word(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_148(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x94000000)) return new e200z4_d_ra_rs_store_u_word(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_149(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x94000000)) return new e200z4_d_ra_rs_store_u_word(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_150(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x94000000)) return new e200z4_d_ra_rs_store_u_word(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_151(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x94000000)) return new e200z4_d_ra_rs_store_u_word(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_152(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x98000000)) return new e200z4_byte_d_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_153(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x98000000)) return new e200z4_byte_d_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_154(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x98000000)) return new e200z4_byte_d_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_155(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x98000000)) return new e200z4_byte_d_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_156(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x9C000000)) return new e200z4_byte_d_ra_rs_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_157(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x9C000000)) return new e200z4_byte_d_ra_rs_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_158(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x9C000000)) return new e200z4_byte_d_ra_rs_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_159(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0x9C000000)) return new e200z4_byte_d_ra_rs_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_160(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA0000000)) return new e200z4_d_half_load_notu_ra_rd_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_161(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA0000000)) return new e200z4_d_half_load_notu_ra_rd_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_162(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA0000000)) return new e200z4_d_half_load_notu_ra_rd_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_163(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA0000000)) return new e200z4_d_half_load_notu_ra_rd_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_164(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA4000000)) return new e200z4_d_half_load_ra_rd_u_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_165(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA4000000)) return new e200z4_d_half_load_ra_rd_u_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_166(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA4000000)) return new e200z4_d_half_load_ra_rd_u_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_167(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA4000000)) return new e200z4_d_half_load_ra_rd_u_zero(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_168(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA8000000)) return new e200z4_algebraic_d_half_load_notu_ra_rd(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_169(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA8000000)) return new e200z4_algebraic_d_half_load_notu_ra_rd(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_170(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA8000000)) return new e200z4_algebraic_d_half_load_notu_ra_rd(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_171(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xA8000000)) return new e200z4_algebraic_d_half_load_notu_ra_rd(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_172(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xAC000000)) return new e200z4_algebraic_d_half_load_ra_rd_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_173(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xAC000000)) return new e200z4_algebraic_d_half_load_ra_rd_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_174(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xAC000000)) return new e200z4_algebraic_d_half_load_ra_rd_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_175(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xAC000000)) return new e200z4_algebraic_d_half_load_ra_rd_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_176(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB0000000)) return new e200z4_d_half_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_177(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB0000000)) return new e200z4_d_half_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_178(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB0000000)) return new e200z4_d_half_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_179(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB0000000)) return new e200z4_d_half_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_180(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB4000000)) return new e200z4_d_half_ra_rs_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_181(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB4000000)) return new e200z4_d_half_ra_rs_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_182(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB4000000)) return new e200z4_d_half_ra_rs_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_183(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB4000000)) return new e200z4_d_half_ra_rs_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_184(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB8000000)) return new e200z4_d_load_mw_notu_ra_rd(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_185(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB8000000)) return new e200z4_d_load_mw_notu_ra_rd(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_186(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB8000000)) return new e200z4_d_load_mw_notu_ra_rd(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_187(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xB8000000)) return new e200z4_d_load_mw_notu_ra_rd(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_188(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xBC000000)) return new e200z4_d_mw_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_189(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xBC000000)) return new e200z4_d_mw_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_190(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xBC000000)) return new e200z4_d_mw_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_191(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xBC000000)) return new e200z4_d_mw_notu_ra_rs_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_192(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC0000000)) return new e200z4_d_frd_fs_load_notu_ra(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_193(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC0000000)) return new e200z4_d_frd_fs_load_notu_ra(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_194(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC0000000)) return new e200z4_d_frd_fs_load_notu_ra(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_195(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC0000000)) return new e200z4_d_frd_fs_load_notu_ra(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_196(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC4000000)) return new e200z4_d_frd_fs_load_ra_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_197(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC4000000)) return new e200z4_d_frd_fs_load_ra_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_198(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC4000000)) return new e200z4_d_frd_fs_load_ra_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_199(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC4000000)) return new e200z4_d_frd_fs_load_ra_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_200(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC8000000)) return new e200z4_d_fd_frd_load_notu_ra(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_201(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC8000000)) return new e200z4_d_fd_frd_load_notu_ra(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_202(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC8000000)) return new e200z4_d_fd_frd_load_notu_ra(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_203(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xC8000000)) return new e200z4_d_fd_frd_load_notu_ra(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_204(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xCC000000)) return new e200z4_d_fd_frd_load_ra_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_205(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xCC000000)) return new e200z4_d_fd_frd_load_ra_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_206(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xCC000000)) return new e200z4_d_fd_frd_load_ra_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_207(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xCC000000)) return new e200z4_d_fd_frd_load_ra_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_208(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD0000000)) return new e200z4_d_frs_fs_notu_ra_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_209(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD0000000)) return new e200z4_d_frs_fs_notu_ra_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_210(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD0000000)) return new e200z4_d_frs_fs_notu_ra_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_211(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD0000000)) return new e200z4_d_frs_fs_notu_ra_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_212(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD4000000)) return new e200z4_d_frs_fs_ra_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_213(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD4000000)) return new e200z4_d_frs_fs_ra_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_214(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD4000000)) return new e200z4_d_frs_fs_ra_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_215(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD4000000)) return new e200z4_d_frs_fs_ra_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_216(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD8000000)) return new e200z4_d_fd_frs_notu_ra_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_217(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD8000000)) return new e200z4_d_fd_frs_notu_ra_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_218(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD8000000)) return new e200z4_d_fd_frs_notu_ra_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_219(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xD8000000)) return new e200z4_d_fd_frs_notu_ra_store(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_220(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xDC000000)) return new e200z4_d_fd_frs_ra_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_221(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xDC000000)) return new e200z4_d_fd_frs_ra_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_222(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xDC000000)) return new e200z4_d_fd_frs_ra_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_223(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC000000) == 0xDC000000)) return new e200z4_d_fd_frs_ra_store_u(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_236(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC00002A)) return new e200z4_fadds_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC00002B)) return new e200z4_fadds_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000024)) return new e200z4_fdivs_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000025)) return new e200z4_fdivs_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003A)) return new e200z4_fmadds_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003B)) return new e200z4_fmadds_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC000038)) return new e200z4_fmsubs_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC000039)) return new e200z4_fmsubs_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xEC000032)) return new e200z4_fmuls_fra_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xEC000033)) return new e200z4_fmuls_fra_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003E)) return new e200z4_fnmadds_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003F)) return new e200z4_fnmadds_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003C)) return new e200z4_fnmsubs_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003D)) return new e200z4_fnmsubs_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000028)) return new e200z4_fra_frb_frd_fsubs_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000029)) return new e200z4_fra_frb_frd_fsubs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC000030)) return new e200z4_frb_frd_fres_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC000031)) return new e200z4_frb_frd_fres_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC00002C)) return new e200z4_frb_frd_fsqrts_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC00002D)) return new e200z4_frb_frd_fsqrts_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_237(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC00002A)) return new e200z4_fadds_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC00002B)) return new e200z4_fadds_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000024)) return new e200z4_fdivs_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000025)) return new e200z4_fdivs_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003A)) return new e200z4_fmadds_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003B)) return new e200z4_fmadds_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC000038)) return new e200z4_fmsubs_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC000039)) return new e200z4_fmsubs_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xEC000032)) return new e200z4_fmuls_fra_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xEC000033)) return new e200z4_fmuls_fra_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003E)) return new e200z4_fnmadds_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003F)) return new e200z4_fnmadds_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003C)) return new e200z4_fnmsubs_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003D)) return new e200z4_fnmsubs_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000028)) return new e200z4_fra_frb_frd_fsubs_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000029)) return new e200z4_fra_frb_frd_fsubs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC000030)) return new e200z4_frb_frd_fres_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC000031)) return new e200z4_frb_frd_fres_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC00002C)) return new e200z4_frb_frd_fsqrts_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC00002D)) return new e200z4_frb_frd_fsqrts_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_238(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC00002A)) return new e200z4_fadds_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC00002B)) return new e200z4_fadds_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000024)) return new e200z4_fdivs_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000025)) return new e200z4_fdivs_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003A)) return new e200z4_fmadds_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003B)) return new e200z4_fmadds_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC000038)) return new e200z4_fmsubs_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC000039)) return new e200z4_fmsubs_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xEC000032)) return new e200z4_fmuls_fra_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xEC000033)) return new e200z4_fmuls_fra_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003E)) return new e200z4_fnmadds_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003F)) return new e200z4_fnmadds_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003C)) return new e200z4_fnmsubs_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003D)) return new e200z4_fnmsubs_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000028)) return new e200z4_fra_frb_frd_fsubs_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000029)) return new e200z4_fra_frb_frd_fsubs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC000030)) return new e200z4_frb_frd_fres_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC000031)) return new e200z4_frb_frd_fres_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC00002C)) return new e200z4_frb_frd_fsqrts_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC00002D)) return new e200z4_frb_frd_fsqrts_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_239(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC00002A)) return new e200z4_fadds_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC00002B)) return new e200z4_fadds_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000024)) return new e200z4_fdivs_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000025)) return new e200z4_fdivs_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003A)) return new e200z4_fmadds_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003B)) return new e200z4_fmadds_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC000038)) return new e200z4_fmsubs_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC000039)) return new e200z4_fmsubs_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xEC000032)) return new e200z4_fmuls_fra_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xEC000033)) return new e200z4_fmuls_fra_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003E)) return new e200z4_fnmadds_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003F)) return new e200z4_fnmadds_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003C)) return new e200z4_fnmsubs_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xEC00003D)) return new e200z4_fnmsubs_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000028)) return new e200z4_fra_frb_frd_fsubs_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xEC000029)) return new e200z4_fra_frb_frd_fsubs_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC000030)) return new e200z4_frb_frd_fres_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC000031)) return new e200z4_frb_frd_fres_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC00002C)) return new e200z4_frb_frd_fsqrts_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xEC00002D)) return new e200z4_frb_frd_fsqrts_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_252(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE3FFFF) == 0xFC000080)) return new e200z4_CR0_crfd_crfs_mcrfs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFC000040)) return new e200z4_CR0_crfd_fcmpo_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFC000000)) return new e200z4_CR0_crfd_fcmpu_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFC00010C)) return new e200z4_CR0_crfd_imm_mtfsfi_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFC00010D)) return new e200z4_CR0_crfd_imm_mtfsfi_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE3FFFF) == 0xFC800080)) return new e200z4_CR1_crfd_crfs_mcrfs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFC800040)) return new e200z4_CR1_crfd_fcmpo_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFC800000)) return new e200z4_CR1_crfd_fcmpu_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFC80010C)) return new e200z4_CR1_crfd_imm_mtfsfi_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFC80010D)) return new e200z4_CR1_crfd_imm_mtfsfi_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00008C)) return new e200z4_crbd_mtfsb0_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00008D)) return new e200z4_crbd_mtfsb0_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00004C)) return new e200z4_crbd_mtfsb1_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00004D)) return new e200z4_crbd_mtfsb1_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000210)) return new e200z4_fabs_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000211)) return new e200z4_fabs_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC00002A)) return new e200z4_fadd_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC00002B)) return new e200z4_fadd_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001C)) return new e200z4_fctiw_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001D)) return new e200z4_fctiw_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001E)) return new e200z4_fctiwz_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001F)) return new e200z4_fctiwz_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000024)) return new e200z4_fdiv_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000025)) return new e200z4_fdiv_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFE0107FF) == 0xFC00058E)) return new e200z4_fm_frb_mtfsf_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFE0107FF) == 0xFC00058F)) return new e200z4_fm_frb_mtfsf_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003A)) return new e200z4_fmadd_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003B)) return new e200z4_fmadd_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000090)) return new e200z4_fmr_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000091)) return new e200z4_fmr_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC000038)) return new e200z4_fmsub_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC000039)) return new e200z4_fmsub_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xFC000032)) return new e200z4_fmul_fra_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xFC000033)) return new e200z4_fmul_fra_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000110)) return new e200z4_fnabs_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000111)) return new e200z4_fnabs_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000050)) return new e200z4_fneg_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000051)) return new e200z4_fneg_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003E)) return new e200z4_fnmadd_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003F)) return new e200z4_fnmadd_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003C)) return new e200z4_fnmsub_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003D)) return new e200z4_fnmsub_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00002E)) return new e200z4_fra_frb_frc_frd_fsel_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00002F)) return new e200z4_fra_frb_frc_frd_fsel_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000028)) return new e200z4_fra_frb_frd_fsub_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000029)) return new e200z4_fra_frb_frd_fsub_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000018)) return new e200z4_frb_frd_frsp_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000019)) return new e200z4_frb_frd_frsp_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000034)) return new e200z4_frb_frd_frsqrte_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000035)) return new e200z4_frb_frd_frsqrte_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00002C)) return new e200z4_frb_frd_fsqrt_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00002D)) return new e200z4_frb_frd_fsqrt_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFE0107FF) == 0xFC00048E)) return new e200z4_frd_mffs_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFE0107FF) == 0xFC00048F)) return new e200z4_frd_mffs_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_253(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE3FFFF) == 0xFD000080)) return new e200z4_CR2_crfd_crfs_mcrfs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFD000040)) return new e200z4_CR2_crfd_fcmpo_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFD000000)) return new e200z4_CR2_crfd_fcmpu_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFD00010C)) return new e200z4_CR2_crfd_imm_mtfsfi_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFD00010D)) return new e200z4_CR2_crfd_imm_mtfsfi_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE3FFFF) == 0xFD800080)) return new e200z4_CR3_crfd_crfs_mcrfs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFD800040)) return new e200z4_CR3_crfd_fcmpo_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFD800000)) return new e200z4_CR3_crfd_fcmpu_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFD80010C)) return new e200z4_CR3_crfd_imm_mtfsfi_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFD80010D)) return new e200z4_CR3_crfd_imm_mtfsfi_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00008C)) return new e200z4_crbd_mtfsb0_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00008D)) return new e200z4_crbd_mtfsb0_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00004C)) return new e200z4_crbd_mtfsb1_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00004D)) return new e200z4_crbd_mtfsb1_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000210)) return new e200z4_fabs_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000211)) return new e200z4_fabs_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC00002A)) return new e200z4_fadd_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC00002B)) return new e200z4_fadd_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001C)) return new e200z4_fctiw_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001D)) return new e200z4_fctiw_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001E)) return new e200z4_fctiwz_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001F)) return new e200z4_fctiwz_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000024)) return new e200z4_fdiv_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000025)) return new e200z4_fdiv_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFE0107FF) == 0xFC00058E)) return new e200z4_fm_frb_mtfsf_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFE0107FF) == 0xFC00058F)) return new e200z4_fm_frb_mtfsf_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003A)) return new e200z4_fmadd_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003B)) return new e200z4_fmadd_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000090)) return new e200z4_fmr_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000091)) return new e200z4_fmr_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC000038)) return new e200z4_fmsub_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC000039)) return new e200z4_fmsub_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xFC000032)) return new e200z4_fmul_fra_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xFC000033)) return new e200z4_fmul_fra_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000110)) return new e200z4_fnabs_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000111)) return new e200z4_fnabs_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000050)) return new e200z4_fneg_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000051)) return new e200z4_fneg_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003E)) return new e200z4_fnmadd_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003F)) return new e200z4_fnmadd_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003C)) return new e200z4_fnmsub_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003D)) return new e200z4_fnmsub_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00002E)) return new e200z4_fra_frb_frc_frd_fsel_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00002F)) return new e200z4_fra_frb_frc_frd_fsel_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000028)) return new e200z4_fra_frb_frd_fsub_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000029)) return new e200z4_fra_frb_frd_fsub_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000018)) return new e200z4_frb_frd_frsp_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000019)) return new e200z4_frb_frd_frsp_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000034)) return new e200z4_frb_frd_frsqrte_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000035)) return new e200z4_frb_frd_frsqrte_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00002C)) return new e200z4_frb_frd_fsqrt_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00002D)) return new e200z4_frb_frd_fsqrt_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFE0107FF) == 0xFC00048E)) return new e200z4_frd_mffs_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFE0107FF) == 0xFC00048F)) return new e200z4_frd_mffs_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_254(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE3FFFF) == 0xFE000080)) return new e200z4_CR4_crfd_crfs_mcrfs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFE000040)) return new e200z4_CR4_crfd_fcmpo_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFE000000)) return new e200z4_CR4_crfd_fcmpu_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFE00010C)) return new e200z4_CR4_crfd_imm_mtfsfi_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFE00010D)) return new e200z4_CR4_crfd_imm_mtfsfi_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE3FFFF) == 0xFE800080)) return new e200z4_CR5_crfd_crfs_mcrfs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFE800040)) return new e200z4_CR5_crfd_fcmpo_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFE800000)) return new e200z4_CR5_crfd_fcmpu_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFE80010C)) return new e200z4_CR5_crfd_imm_mtfsfi_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFE80010D)) return new e200z4_CR5_crfd_imm_mtfsfi_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00008C)) return new e200z4_crbd_mtfsb0_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00008D)) return new e200z4_crbd_mtfsb0_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00004C)) return new e200z4_crbd_mtfsb1_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00004D)) return new e200z4_crbd_mtfsb1_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000210)) return new e200z4_fabs_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000211)) return new e200z4_fabs_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC00002A)) return new e200z4_fadd_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC00002B)) return new e200z4_fadd_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001C)) return new e200z4_fctiw_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001D)) return new e200z4_fctiw_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001E)) return new e200z4_fctiwz_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001F)) return new e200z4_fctiwz_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000024)) return new e200z4_fdiv_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000025)) return new e200z4_fdiv_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003A)) return new e200z4_fmadd_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003B)) return new e200z4_fmadd_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000090)) return new e200z4_fmr_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000091)) return new e200z4_fmr_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC000038)) return new e200z4_fmsub_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC000039)) return new e200z4_fmsub_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xFC000032)) return new e200z4_fmul_fra_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xFC000033)) return new e200z4_fmul_fra_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000110)) return new e200z4_fnabs_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000111)) return new e200z4_fnabs_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000050)) return new e200z4_fneg_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000051)) return new e200z4_fneg_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003E)) return new e200z4_fnmadd_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003F)) return new e200z4_fnmadd_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003C)) return new e200z4_fnmsub_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003D)) return new e200z4_fnmsub_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00002E)) return new e200z4_fra_frb_frc_frd_fsel_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00002F)) return new e200z4_fra_frb_frc_frd_fsel_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000028)) return new e200z4_fra_frb_frd_fsub_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000029)) return new e200z4_fra_frb_frd_fsub_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000018)) return new e200z4_frb_frd_frsp_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000019)) return new e200z4_frb_frd_frsp_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000034)) return new e200z4_frb_frd_frsqrte_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000035)) return new e200z4_frb_frd_frsqrte_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00002C)) return new e200z4_frb_frd_fsqrt_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00002D)) return new e200z4_frb_frd_fsqrt_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_255(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	u32 chunk_32_0 = chunk1;
	if(((chunk_32_0 & 0xFFE3FFFF) == 0xFF000080)) return new e200z4_CR6_crfd_crfs_mcrfs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFF000040)) return new e200z4_CR6_crfd_fcmpo_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFF000000)) return new e200z4_CR6_crfd_fcmpu_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFF00010C)) return new e200z4_CR6_crfd_imm_mtfsfi_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFF00010D)) return new e200z4_CR6_crfd_imm_mtfsfi_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE3FFFF) == 0xFF800080)) return new e200z4_CR7_crfd_crfs_mcrfs(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFF800040)) return new e200z4_CR7_crfd_fcmpo_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFE007FF) == 0xFF800000)) return new e200z4_CR7_crfd_fcmpu_fra_frb(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFF80010C)) return new e200z4_CR7_crfd_imm_mtfsfi_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFFFF0FFF) == 0xFF80010D)) return new e200z4_CR7_crfd_imm_mtfsfi_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00008C)) return new e200z4_crbd_mtfsb0_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00008D)) return new e200z4_crbd_mtfsb0_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00004C)) return new e200z4_crbd_mtfsb1_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1FFFFF) == 0xFC00004D)) return new e200z4_crbd_mtfsb1_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000210)) return new e200z4_fabs_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000211)) return new e200z4_fabs_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC00002A)) return new e200z4_fadd_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC00002B)) return new e200z4_fadd_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001C)) return new e200z4_fctiw_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001D)) return new e200z4_fctiw_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001E)) return new e200z4_fctiwz_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00001F)) return new e200z4_fctiwz_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000024)) return new e200z4_fdiv_fra_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000025)) return new e200z4_fdiv_fra_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003A)) return new e200z4_fmadd_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003B)) return new e200z4_fmadd_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000090)) return new e200z4_fmr_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000091)) return new e200z4_fmr_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC000038)) return new e200z4_fmsub_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC000039)) return new e200z4_fmsub_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xFC000032)) return new e200z4_fmul_fra_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00F83F) == 0xFC000033)) return new e200z4_fmul_fra_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000110)) return new e200z4_fnabs_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000111)) return new e200z4_fnabs_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000050)) return new e200z4_fneg_frb_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000051)) return new e200z4_fneg_frb_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003E)) return new e200z4_fnmadd_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003F)) return new e200z4_fnmadd_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003C)) return new e200z4_fnmsub_fra_frb_frc_frd_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00003D)) return new e200z4_fnmsub_fra_frb_frc_frd_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00002E)) return new e200z4_fra_frb_frc_frd_fsel_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC00003F) == 0xFC00002F)) return new e200z4_fra_frb_frc_frd_fsel_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000028)) return new e200z4_fra_frb_frd_fsub_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC0007FF) == 0xFC000029)) return new e200z4_fra_frb_frd_fsub_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000018)) return new e200z4_frb_frd_frsp_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000019)) return new e200z4_frb_frd_frsp_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000034)) return new e200z4_frb_frd_frsqrte_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC000035)) return new e200z4_frb_frd_frsqrte_useStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00002C)) return new e200z4_frb_frd_fsqrt_noStatus(pcBase,chunk1);
	if(((chunk_32_0 & 0xFC1F07FF) == 0xFC00002D)) return new e200z4_frb_frd_fsqrt_useStatus(pcBase,chunk1);
	return NULL;
}

e200z4_instruction* e200z4_decode_NI(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) {
	return NULL;
}

e200z4_instruction* (*e200z4_decodeTab[])(e200z4_instDecoder *decoder, arch *_arch, u32 &pc, const u32 pcBase, const u32 chunk1) = {
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_12, e200z4_decode_13, e200z4_decode_14, e200z4_decode_15, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_28, e200z4_decode_29, e200z4_decode_30, e200z4_decode_31, 
	e200z4_decode_32, e200z4_decode_33, e200z4_decode_34, e200z4_decode_35, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_40, e200z4_decode_41, e200z4_decode_42, e200z4_decode_43, 
	e200z4_decode_44, e200z4_decode_45, e200z4_decode_46, e200z4_decode_47, 
	e200z4_decode_48, e200z4_decode_49, e200z4_decode_50, e200z4_decode_51, 
	e200z4_decode_52, e200z4_decode_53, e200z4_decode_54, e200z4_decode_55, 
	e200z4_decode_56, e200z4_decode_57, e200z4_decode_58, e200z4_decode_59, 
	e200z4_decode_60, e200z4_decode_61, e200z4_decode_62, e200z4_decode_63, 
	e200z4_decode_64, e200z4_decode_65, e200z4_decode_66, e200z4_decode_67, 
	e200z4_decode_68, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_72, e200z4_decode_73, e200z4_decode_74, e200z4_decode_75, 
	e200z4_decode_76, e200z4_decode_77, e200z4_decode_78, e200z4_decode_79, 
	e200z4_decode_80, e200z4_decode_81, e200z4_decode_82, e200z4_decode_83, 
	e200z4_decode_84, e200z4_decode_85, e200z4_decode_86, e200z4_decode_87, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_92, e200z4_decode_93, e200z4_decode_94, e200z4_decode_95, 
	e200z4_decode_96, e200z4_decode_97, e200z4_decode_98, e200z4_decode_99, 
	e200z4_decode_100, e200z4_decode_101, e200z4_decode_102, e200z4_decode_103, 
	e200z4_decode_104, e200z4_decode_105, e200z4_decode_106, e200z4_decode_107, 
	e200z4_decode_108, e200z4_decode_109, e200z4_decode_110, e200z4_decode_111, 
	e200z4_decode_112, e200z4_decode_113, e200z4_decode_114, e200z4_decode_115, 
	e200z4_decode_116, e200z4_decode_117, e200z4_decode_118, e200z4_decode_119, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_124, e200z4_decode_125, e200z4_decode_126, e200z4_decode_127, 
	e200z4_decode_128, e200z4_decode_129, e200z4_decode_130, e200z4_decode_131, 
	e200z4_decode_132, e200z4_decode_133, e200z4_decode_134, e200z4_decode_135, 
	e200z4_decode_136, e200z4_decode_137, e200z4_decode_138, e200z4_decode_139, 
	e200z4_decode_140, e200z4_decode_141, e200z4_decode_142, e200z4_decode_143, 
	e200z4_decode_144, e200z4_decode_145, e200z4_decode_146, e200z4_decode_147, 
	e200z4_decode_148, e200z4_decode_149, e200z4_decode_150, e200z4_decode_151, 
	e200z4_decode_152, e200z4_decode_153, e200z4_decode_154, e200z4_decode_155, 
	e200z4_decode_156, e200z4_decode_157, e200z4_decode_158, e200z4_decode_159, 
	e200z4_decode_160, e200z4_decode_161, e200z4_decode_162, e200z4_decode_163, 
	e200z4_decode_164, e200z4_decode_165, e200z4_decode_166, e200z4_decode_167, 
	e200z4_decode_168, e200z4_decode_169, e200z4_decode_170, e200z4_decode_171, 
	e200z4_decode_172, e200z4_decode_173, e200z4_decode_174, e200z4_decode_175, 
	e200z4_decode_176, e200z4_decode_177, e200z4_decode_178, e200z4_decode_179, 
	e200z4_decode_180, e200z4_decode_181, e200z4_decode_182, e200z4_decode_183, 
	e200z4_decode_184, e200z4_decode_185, e200z4_decode_186, e200z4_decode_187, 
	e200z4_decode_188, e200z4_decode_189, e200z4_decode_190, e200z4_decode_191, 
	e200z4_decode_192, e200z4_decode_193, e200z4_decode_194, e200z4_decode_195, 
	e200z4_decode_196, e200z4_decode_197, e200z4_decode_198, e200z4_decode_199, 
	e200z4_decode_200, e200z4_decode_201, e200z4_decode_202, e200z4_decode_203, 
	e200z4_decode_204, e200z4_decode_205, e200z4_decode_206, e200z4_decode_207, 
	e200z4_decode_208, e200z4_decode_209, e200z4_decode_210, e200z4_decode_211, 
	e200z4_decode_212, e200z4_decode_213, e200z4_decode_214, e200z4_decode_215, 
	e200z4_decode_216, e200z4_decode_217, e200z4_decode_218, e200z4_decode_219, 
	e200z4_decode_220, e200z4_decode_221, e200z4_decode_222, e200z4_decode_223, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_236, e200z4_decode_237, e200z4_decode_238, e200z4_decode_239, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, e200z4_decode_NI, 
	e200z4_decode_252, e200z4_decode_253, e200z4_decode_254, e200z4_decode_255
};

e200z4_instDecoder::e200z4_instDecoder()
{
	#ifndef DO_NOT_USE_INTERNAL_INSTRUCTION_CACHE
		cache = new e200z4_instDecoderCache(INTERNAL_INSTRUCTION_CACHE_SIZE_IN_BITS);
	#endif
}


e200z4_instruction* e200z4_instDecoder::decode(arch *_arch, u32 &pc)
{
	#ifndef DO_NOT_USE_INTERNAL_INSTRUCTION_CACHE
		return cache->getInstruction(_arch, pc, this);
	#else
		return decodeWithExecActionCache(_arch, pc);
	#endif
}

e200z4_instruction* e200z4_instDecoder::decodeWithExecActionCache(arch *_arch, u32 &codeAddr)
{
	//search if instruction is in the cache.
	executeInstAction *inst = m_execActionNotInCache.getAndRemoveAt(codeAddr);
	if(inst)
	{
		//cout << "instruction to decode is in exec cache (addr = " << hex << codeAddr << ")"<< endl;
		e200z4_instruction *notDecoratedInst = inst->instruction();
		if(notDecoratedInst)
		{
			//cout << "instruction is " << notDecoratedInst->mnemo();
			//instruction in cache, and decoded. 
			//we should update the 'pc'.
			const u8 chunks = notDecoratedInst->chunks();
			codeAddr += chunks<<2;
			return inst;
		} else { 
			//cout << "instruction was not yet decoded." << endl;
			//there is an action, but instruction was not previously decoded. Do it now.
			inst->setInstruction(decodeDirect(_arch, codeAddr));
			return inst;
		}
	} else { //not in exec cache.
		return decodeDirect(_arch, codeAddr);
	}
}

e200z4_instruction* e200z4_instDecoder::decodeDirect(arch *_arch, u32 &pc)
{
	const u32 pcBase = pc;
	const u32 instCode = _arch->defaultFetch(pc);
	unsigned int tabEntry = instCode >> 24; //most significant bits -> first part of the opcode.
	e200z4_instruction *inst = e200z4_decodeTab[tabEntry](this, _arch, pc, pcBase, instCode);
	if(inst == NULL)
	{
		//not decoded. May be an illegal opcode (an instruction that follows a jump?)
		inst = new e200z4_instructionStall(pcBase, instCode);
	}
	return inst;
}

void e200z4_instDecoder::decoderStats()
{
	#ifndef DO_NOT_USE_INTERNAL_INSTRUCTION_CACHE
		cache->printCacheStats();
	#else
		cout << "no internal instruction decoder cache used. Please recompile without the flag DO_NOT_USE_INTERNAL_INSTRUCTION_CACHE." << endl;
	#endif
}

e200z4_instruction *e200z4_instDecoder::isInCache(const u32 address)
{
	#ifndef DO_NOT_USE_INTERNAL_INSTRUCTION_CACHE
		//e200z4_instruction *inst = cache->isInCache(address);
		//if(inst) cerr << "1  instruction @0x" << hex << address << endl;
		//else     cerr << "NO instruction @0x" << hex << address << endl;
		//return inst;
		return cache->isInCache(address);
	#else
		return NULL;
	#endif
}

void e200z4_instDecoder::replaceInCache(const u32 addr, e200z4_instruction *inst,executeInstAction *eia)
{
	#ifndef DO_NOT_USE_INTERNAL_INSTRUCTION_CACHE
		cache->replaceInCache(addr, inst, eia);
	#else
		cerr << "internal error: 'replaceInCache' should NOT be called, "
		     << "as the simulator is compiled with no cache." << endl;
	#endif
}

void e200z4_instDecoder::addExecuteActionAtAddress(const u32 addr, executeAction *ea)
{
	//m_execActionNotInCache.dump();
	//search if the instruction associated to this action is in the cache.
	e200z4_instruction *inst = isInCache(addr);
	if(inst)
	{
		//instruction is in cache.
		if(inst->isInstAction())
		{
			//add the action to the existing executeInstAction
			executeInstAction *eia = (executeInstAction *)inst;
			eia->addExecuteAction(ea);
		} else {
			//no executeInstAction associated. Create it.
			executeInstAction *eia = new executeInstAction(addr);
			eia->addExecuteAction(ea);
			eia->setInstruction(inst);
			//no retain 
			replaceInCache(addr, inst, eia);
		}
	} else {
		executeInstAction *eia = m_execActionNotInCache.get(addr);
		if(eia) //already in the list
		{
			eia->addExecuteAction(ea);
		} else {
			eia = new executeInstAction(addr);
			eia->addExecuteAction(ea);
			m_execActionNotInCache.insert(eia);
		}
	}
	//cout << "buffer size :" << dec << m_execActionNotInCache.size() << endl;
}


void e200z4_instDecoder::cacheRemoveInstruction(e200z4_instruction *instToRemove)
{
	if(instToRemove->isInstAction()) //is the instruction associated to an action.
	{
		executeInstAction *eia = (executeInstAction *)instToRemove;
		eia->retain();
		m_execActionNotInCache.insert(eia);
	}
}

bool e200z4_instDecoder::removeExecuteActionAtAddress(const u32 addr, executeAction *ea)
{
	bool found = false;
	//search if the instruction associated to this action is in the cache.
	e200z4_instruction *inst = isInCache(addr);
	if(inst)
	{
		//cerr << "addr 0x" << addr << " is in cache"<<endl;
		//instruction is in cache.
		if(inst->isInstAction())
		{
			//remove the action to the existing executeInstAction
			executeInstAction *eia = (executeInstAction *)inst;
			found = eia->removeExecuteAction(ea);
		} else { //no action at this place.
			//cerr << "There is no execute action to remove at address 0x"<< hex << addr << endl;
		}
	} else { //not in cache
		//cerr << "addr 0x" << addr << " is NOT in cache"<<endl;
		//search in the local list
		found = m_execActionNotInCache.removeExecAction(addr,ea);
	}
	return found;
}
