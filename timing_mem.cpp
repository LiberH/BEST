/**
 * generated by HARMLESS : 'Hardware ARchitecture Modeling Language
 *                          for Embedded Software Simulation'
 * model : e200z4
 *
 */

#include <iostream>
#include "timingSignal.h"

#include "timing_mem.h"
#include "arch.h"

//state related code
bool timingmem::step_0(arch *_arch)
{
	#ifdef DEBUG_TIMING
		std::cout << "timingmem::step_0" << std::endl;
	#endif
	const bool result = _arch->timingSynchroWait(this,m_inOffset + SIGNAL_WAIT_mem_memStart);
	nextStep = &timingmem::step_1;
	return result;
}
bool timingmem::step_1(arch *_arch)
{
	#ifdef DEBUG_TIMING
		std::cout << "timingmem::step_1" << std::endl;
	#endif
	_arch->timingWaitForCycles(this,(300U));
	nextStep = &timingmem::step_2;
	return false;
}
bool timingmem::step_2(arch *_arch)
{
	#ifdef DEBUG_TIMING
		std::cout << "timingmem::step_2" << std::endl;
	#endif
	const bool result = _arch->timingSynchroEmit(this,m_outOffset + SIGNAL_EMIT_mem_memEnd, false);
	nextStep = &timingmem::step_0;
	return result;
}
